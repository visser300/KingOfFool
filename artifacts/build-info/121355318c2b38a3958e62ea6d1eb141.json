{"id":"121355318c2b38a3958e62ea6d1eb141","_format":"hh-sol-build-info-1","solcVersion":"0.8.1","solcLongVersion":"0.8.1+commit.df193b15","input":{"language":"Solidity","sources":{"@openzeppelin/contracts4.7.3/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts4.7.3/security/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts4.7.3/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"},"@openzeppelin/contracts4.7.3/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts4.7.3/utils/math/SafeMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"},"contracts/FoolLogic.sol":{"content":"pragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts4.7.3/access/Ownable.sol\";\nimport \"@openzeppelin/contracts4.7.3/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts4.7.3/security/Pausable.sol\";\nimport \"@openzeppelin/contracts4.7.3/security/ReentrancyGuard.sol\";\nimport \"./FoolVault.sol\";\n\ninterface IERC20 {\n    function transfer(address _to, uint256 _value) external returns (bool);\n}\n\ncontract FoolLogic is Ownable, Pausable, ReentrancyGuard {\n\n  using SafeMath for uint256;\n  address eternalStorage;\n\n  constructor(address _eternalStorage) {\n    eternalStorage = _eternalStorage;\n  }\n\n  function pause() public onlyOwner {\n    _pause();\n  }\n\n  function unpause() public onlyOwner {\n    _unpause();\n  }\n\n  function recordLastFool(address _lastFool, uint256 _lastDeposit) external onlyOwner whenNotPaused() nonReentrant() {\n    IERC20 usdt = IERC20(address(0xdAC17F958D2ee523a2206206994597C13D831ec7));\n    FoolVault vault = FoolVault(eternalStorage);\n\n    uint256 internalDeposit = vault.getLastDeposit();\n    address internalFool = vault.getLastFool();\n    require(_lastDeposit >= internalDeposit * 2, \"deposit is too small\");\n  \n    vault.setLastDeposit(_lastDeposit);\n    vault.setLastFool(_lastFool);\n\n    if (internalDeposit > 0) {\n\n      usdt.transfer(internalFool, internalDeposit);\n    }\n  }\n}"},"contracts/FoolVault.sol":{"content":"pragma solidity ^0.8.0;\n\ncontract FoolVault {\n\n  address owner = msg.sender;\n  address latestVersion;\n  address lastFool;\n  uint256 lastDeposit;\n\n  modifier onlyLatestVersion() {\n    require(msg.sender == latestVersion);\n    _;\n  }\n\n  function upgradeVersion(address _newVersion) public {\n    require(msg.sender == owner);\n    latestVersion = _newVersion;\n  }\n\n  // *** Getter Methods ***\n  function getLastDeposit() external view returns(uint256) {\n    return lastDeposit;\n  }\n\n  function getLastFool() external view returns(address) {\n    return lastFool;\n  }\n\n    // *** Setter Methods ***\n  function setLastDeposit(uint256 _value) onlyLatestVersion external {\n    lastDeposit = _value;\n  }\n\n  function setLastFool(address _value) onlyLatestVersion external {\n    lastFool = _value;\n  }\n}"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/FoolLogic.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/FoolLogic.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/FoolVault.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/FoolVault.sol","start":-1},"type":"Warning"}],"sources":{"@openzeppelin/contracts4.7.3/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts4.7.3/access/Ownable.sol","exportedSymbols":{"Context":[282],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts4.7.3/utils/Context.sol","file":"../utils/Context.sol","id":2,"nodeType":"ImportDirective","scope":113,"sourceUnit":283,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":282,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"contractDependencies":[282],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,282],"name":"Ownable","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":13,"name":"OwnershipTransferred","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1885:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1914:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1895:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1895:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1895:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:331:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"modifierName":{"id":57,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1875:9:0"},"nodeType":"ModifierInvocation","src":"1875:9:0"}],"name":"renounceOwnership","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1857:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1885:0:0"},"scope":112,"src":"1831:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2151:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2169:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2181:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2161:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2161:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2263:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2244:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2244:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2244:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1938:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"modifierName":{"id":73,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2141:9:0"},"nodeType":"ModifierInvocation","src":"2141:9:0"}],"name":"transferOwnership","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nodeType":"VariableDeclaration","scope":91,"src":"2108:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2151:0:0"},"scope":112,"src":"2081:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2496:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nodeType":"VariableDeclaration","scope":110,"src":"2506:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2525:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2541:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2550:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2541:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2594:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2573:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2573:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2568:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2285:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nodeType":"VariableDeclaration","scope":111,"src":"2461:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2496:0:0"},"scope":112,"src":"2433:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1968:0"}],"src":"102:2521:0"},"id":0},"@openzeppelin/contracts4.7.3/security/Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts4.7.3/security/Pausable.sol","exportedSymbols":{"Context":[282],"Pausable":[220]},"id":221,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:1"},{"absolutePath":"@openzeppelin/contracts4.7.3/utils/Context.sol","file":"../utils/Context.sol","id":115,"nodeType":"ImportDirective","scope":221,"sourceUnit":283,"src":"130:30:1","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":117,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":282,"src":"632:7:1"},"id":118,"nodeType":"InheritanceSpecifier","src":"632:7:1"}],"contractDependencies":[282],"contractKind":"contract","documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"162:439:1","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":220,"linearizedBaseContracts":[220,282],"name":"Pausable","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":119,"nodeType":"StructuredDocumentation","src":"646:73:1","text":" @dev Emitted when the pause is triggered by `account`."},"id":123,"name":"Paused","nodeType":"EventDefinition","parameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"indexed":false,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":123,"src":"737:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":120,"name":"address","nodeType":"ElementaryTypeName","src":"737:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"736:17:1"},"src":"724:30:1"},{"anonymous":false,"documentation":{"id":124,"nodeType":"StructuredDocumentation","src":"760:70:1","text":" @dev Emitted when the pause is lifted by `account`."},"id":128,"name":"Unpaused","nodeType":"EventDefinition","parameters":{"id":127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":126,"indexed":false,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":128,"src":"850:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"850:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"849:17:1"},"src":"835:32:1"},{"constant":false,"id":130,"mutability":"mutable","name":"_paused","nodeType":"VariableDeclaration","scope":220,"src":"873:20:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":129,"name":"bool","nodeType":"ElementaryTypeName","src":"873:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"body":{"id":138,"nodeType":"Block","src":"986:32:1","statements":[{"expression":{"id":136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":134,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"996:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1006:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"996:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":137,"nodeType":"ExpressionStatement","src":"996:15:1"}]},"documentation":{"id":131,"nodeType":"StructuredDocumentation","src":"900:67:1","text":" @dev Initializes the contract in unpaused state."},"id":139,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":132,"nodeType":"ParameterList","parameters":[],"src":"983:2:1"},"returnParameters":{"id":133,"nodeType":"ParameterList","parameters":[],"src":"986:0:1"},"scope":220,"src":"972:46:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":146,"nodeType":"Block","src":"1229:47:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":142,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"1239:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1239:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"ExpressionStatement","src":"1239:19:1"},{"id":145,"nodeType":"PlaceholderStatement","src":"1268:1:1"}]},"documentation":{"id":140,"nodeType":"StructuredDocumentation","src":"1024:175:1","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":147,"name":"whenNotPaused","nodeType":"ModifierDefinition","parameters":{"id":141,"nodeType":"ParameterList","parameters":[],"src":"1226:2:1"},"src":"1204:72:1","virtual":false,"visibility":"internal"},{"body":{"id":154,"nodeType":"Block","src":"1476:44:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":150,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"1486:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1486:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":152,"nodeType":"ExpressionStatement","src":"1486:16:1"},{"id":153,"nodeType":"PlaceholderStatement","src":"1512:1:1"}]},"documentation":{"id":148,"nodeType":"StructuredDocumentation","src":"1282:167:1","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":155,"name":"whenPaused","nodeType":"ModifierDefinition","parameters":{"id":149,"nodeType":"ParameterList","parameters":[],"src":"1473:2:1"},"src":"1454:66:1","virtual":false,"visibility":"internal"},{"body":{"id":163,"nodeType":"Block","src":"1668:31:1","statements":[{"expression":{"id":161,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"1685:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":160,"id":162,"nodeType":"Return","src":"1678:14:1"}]},"documentation":{"id":156,"nodeType":"StructuredDocumentation","src":"1526:84:1","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":164,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nodeType":"FunctionDefinition","parameters":{"id":157,"nodeType":"ParameterList","parameters":[],"src":"1630:2:1"},"returnParameters":{"id":160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":159,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":164,"src":"1662:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":158,"name":"bool","nodeType":"ElementaryTypeName","src":"1662:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1661:6:1"},"scope":220,"src":"1615:84:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":175,"nodeType":"Block","src":"1818:55:1","statements":[{"expression":{"arguments":[{"id":171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1836:9:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":169,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"1837:6:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1837:8:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a20706175736564","id":172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1847:18:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""},"value":"Pausable: paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""}],"id":168,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1828:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1828:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":174,"nodeType":"ExpressionStatement","src":"1828:38:1"}]},"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"1705:57:1","text":" @dev Throws if the contract is paused."},"id":176,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nodeType":"FunctionDefinition","parameters":{"id":166,"nodeType":"ParameterList","parameters":[],"src":"1793:2:1"},"returnParameters":{"id":167,"nodeType":"ParameterList","parameters":[],"src":"1818:0:1"},"scope":220,"src":"1767:106:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":186,"nodeType":"Block","src":"1993:58:1","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":181,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"2011:6:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2011:8:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a206e6f7420706175736564","id":183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2021:22:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""},"value":"Pausable: not paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""}],"id":180,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2003:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2003:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":185,"nodeType":"ExpressionStatement","src":"2003:41:1"}]},"documentation":{"id":177,"nodeType":"StructuredDocumentation","src":"1879:61:1","text":" @dev Throws if the contract is not paused."},"id":187,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nodeType":"FunctionDefinition","parameters":{"id":178,"nodeType":"ParameterList","parameters":[],"src":"1968:2:1"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[],"src":"1993:0:1"},"scope":220,"src":"1945:106:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":202,"nodeType":"Block","src":"2235:66:1","statements":[{"expression":{"id":195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":193,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"2245:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2255:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2245:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":196,"nodeType":"ExpressionStatement","src":"2245:14:1"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":198,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"2281:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2281:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":197,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"2274:6:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2274:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":201,"nodeType":"EmitStatement","src":"2269:25:1"}]},"documentation":{"id":188,"nodeType":"StructuredDocumentation","src":"2057:124:1","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":203,"implemented":true,"kind":"function","modifiers":[{"id":191,"modifierName":{"id":190,"name":"whenNotPaused","nodeType":"IdentifierPath","referencedDeclaration":147,"src":"2221:13:1"},"nodeType":"ModifierInvocation","src":"2221:13:1"}],"name":"_pause","nodeType":"FunctionDefinition","parameters":{"id":189,"nodeType":"ParameterList","parameters":[],"src":"2201:2:1"},"returnParameters":{"id":192,"nodeType":"ParameterList","parameters":[],"src":"2235:0:1"},"scope":220,"src":"2186:115:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":218,"nodeType":"Block","src":"2481:69:1","statements":[{"expression":{"id":211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":209,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"2491:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2501:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2491:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":212,"nodeType":"ExpressionStatement","src":"2491:15:1"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":214,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"2530:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2530:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":213,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"2521:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2521:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":217,"nodeType":"EmitStatement","src":"2516:27:1"}]},"documentation":{"id":204,"nodeType":"StructuredDocumentation","src":"2307:121:1","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":219,"implemented":true,"kind":"function","modifiers":[{"id":207,"modifierName":{"id":206,"name":"whenPaused","nodeType":"IdentifierPath","referencedDeclaration":155,"src":"2470:10:1"},"nodeType":"ModifierInvocation","src":"2470:10:1"}],"name":"_unpause","nodeType":"FunctionDefinition","parameters":{"id":205,"nodeType":"ParameterList","parameters":[],"src":"2450:2:1"},"returnParameters":{"id":208,"nodeType":"ParameterList","parameters":[],"src":"2481:0:1"},"scope":220,"src":"2433:117:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":221,"src":"602:1950:1"}],"src":"105:2448:1"},"id":1},"@openzeppelin/contracts4.7.3/security/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts4.7.3/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[260]},"id":261,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":222,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"97:23:2"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":223,"nodeType":"StructuredDocumentation","src":"122:750:2","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":260,"linearizedBaseContracts":[260],"name":"ReentrancyGuard","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":226,"mutability":"constant","name":"_NOT_ENTERED","nodeType":"VariableDeclaration","scope":260,"src":"1661:41:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":224,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1701:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":229,"mutability":"constant","name":"_ENTERED","nodeType":"VariableDeclaration","scope":260,"src":"1708:37:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":227,"name":"uint256","nodeType":"ElementaryTypeName","src":"1708:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1744:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":231,"mutability":"mutable","name":"_status","nodeType":"VariableDeclaration","scope":260,"src":"1752:23:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":230,"name":"uint256","nodeType":"ElementaryTypeName","src":"1752:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":238,"nodeType":"Block","src":"1796:39:2","statements":[{"expression":{"id":236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":234,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"1806:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":235,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"1816:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1806:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":237,"nodeType":"ExpressionStatement","src":"1806:22:2"}]},"id":239,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":232,"nodeType":"ParameterList","parameters":[],"src":"1793:2:2"},"returnParameters":{"id":233,"nodeType":"ParameterList","parameters":[],"src":"1796:0:2"},"scope":260,"src":"1782:53:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":258,"nodeType":"Block","src":"2236:421:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":243,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"2325:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":244,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"2336:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2325:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2346:33:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":242,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2317:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2317:63:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":248,"nodeType":"ExpressionStatement","src":"2317:63:2"},{"expression":{"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":249,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"2455:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":250,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"2465:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2455:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":252,"nodeType":"ExpressionStatement","src":"2455:18:2"},{"id":253,"nodeType":"PlaceholderStatement","src":"2484:1:2"},{"expression":{"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":254,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"2628:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":255,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"2638:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2628:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":257,"nodeType":"ExpressionStatement","src":"2628:22:2"}]},"documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"1841:366:2","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":259,"name":"nonReentrant","nodeType":"ModifierDefinition","parameters":{"id":241,"nodeType":"ParameterList","parameters":[],"src":"2233:2:2"},"src":"2212:445:2","virtual":false,"visibility":"internal"}],"scope":261,"src":"873:1786:2"}],"src":"97:2563:2"},"id":2},"@openzeppelin/contracts4.7.3/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts4.7.3/utils/Context.sol","exportedSymbols":{"Context":[282]},"id":283,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":262,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:3"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":263,"nodeType":"StructuredDocumentation","src":"111:496:3","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":282,"linearizedBaseContracts":[282],"name":"Context","nodeType":"ContractDefinition","nodes":[{"body":{"id":271,"nodeType":"Block","src":"702:34:3","statements":[{"expression":{"expression":{"id":268,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":267,"id":270,"nodeType":"Return","src":"712:17:3"}]},"id":272,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nodeType":"FunctionDefinition","parameters":{"id":264,"nodeType":"ParameterList","parameters":[],"src":"659:2:3"},"returnParameters":{"id":267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":266,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":272,"src":"693:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:3"},"scope":282,"src":"640:96:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":280,"nodeType":"Block","src":"809:32:3","statements":[{"expression":{"expression":{"id":277,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":276,"id":279,"nodeType":"Return","src":"819:15:3"}]},"id":281,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nodeType":"FunctionDefinition","parameters":{"id":273,"nodeType":"ParameterList","parameters":[],"src":"759:2:3"},"returnParameters":{"id":276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":275,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":281,"src":"793:14:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":274,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:3"},"scope":282,"src":"742:99:3","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":283,"src":"608:235:3"}],"src":"86:758:3"},"id":3},"@openzeppelin/contracts4.7.3/utils/math/SafeMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts4.7.3/utils/math/SafeMath.sol","exportedSymbols":{"SafeMath":[594]},"id":595,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":284,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:4"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":285,"nodeType":"StructuredDocumentation","src":"285:196:4","text":" @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."},"fullyImplemented":true,"id":594,"linearizedBaseContracts":[594],"name":"SafeMath","nodeType":"ContractDefinition","nodes":[{"body":{"id":316,"nodeType":"Block","src":"717:140:4","statements":[{"id":315,"nodeType":"UncheckedBlock","src":"727:124:4","statements":[{"assignments":[298],"declarations":[{"constant":false,"id":298,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":315,"src":"751:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":297,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":302,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":299,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"763:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":300,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"767:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"763:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"751:17:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":303,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"786:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":304,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"790:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"786:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":310,"nodeType":"IfStatement","src":"782:28:4","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"801:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"808:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":308,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"800:10:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":296,"id":309,"nodeType":"Return","src":"793:17:4"}},{"expression":{"components":[{"hexValue":"74727565","id":311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"832:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":312,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"838:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":313,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"831:9:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":296,"id":314,"nodeType":"Return","src":"824:16:4"}]}]},"documentation":{"id":286,"nodeType":"StructuredDocumentation","src":"505:131:4","text":" @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":317,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nodeType":"FunctionDefinition","parameters":{"id":291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":288,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":317,"src":"657:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":287,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":290,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":317,"src":"668:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":289,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:22:4"},"returnParameters":{"id":296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":293,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":317,"src":"702:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":292,"name":"bool","nodeType":"ElementaryTypeName","src":"702:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":295,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":317,"src":"708:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":294,"name":"uint256","nodeType":"ElementaryTypeName","src":"708:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"701:15:4"},"scope":594,"src":"641:216:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":344,"nodeType":"Block","src":"1078:113:4","statements":[{"id":343,"nodeType":"UncheckedBlock","src":"1088:97:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":329,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"1116:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":330,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"1120:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1116:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":336,"nodeType":"IfStatement","src":"1112:28:4","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1131:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1138:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":334,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1130:10:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":328,"id":335,"nodeType":"Return","src":"1123:17:4"}},{"expression":{"components":[{"hexValue":"74727565","id":337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1162:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":338,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"1168:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":339,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"1172:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1168:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":341,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1161:13:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":328,"id":342,"nodeType":"Return","src":"1154:20:4"}]}]},"documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"863:134:4","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":345,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nodeType":"FunctionDefinition","parameters":{"id":323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":345,"src":"1018:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":319,"name":"uint256","nodeType":"ElementaryTypeName","src":"1018:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":322,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":345,"src":"1029:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":321,"name":"uint256","nodeType":"ElementaryTypeName","src":"1029:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1017:22:4"},"returnParameters":{"id":328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":325,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":345,"src":"1063:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":324,"name":"bool","nodeType":"ElementaryTypeName","src":"1063:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":327,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":345,"src":"1069:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":326,"name":"uint256","nodeType":"ElementaryTypeName","src":"1069:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1062:15:4"},"scope":594,"src":"1002:189:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":386,"nodeType":"Block","src":"1415:417:4","statements":[{"id":385,"nodeType":"UncheckedBlock","src":"1425:401:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":357,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"1683:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1688:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1683:6:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":364,"nodeType":"IfStatement","src":"1679:28:4","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1699:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1705:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":362,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1698:9:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":356,"id":363,"nodeType":"Return","src":"1691:16:4"}},{"assignments":[366],"declarations":[{"constant":false,"id":366,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":385,"src":"1721:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":365,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":370,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":367,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"1733:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":368,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":350,"src":"1737:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1733:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1721:17:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":371,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"1756:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":372,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"1760:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":374,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":350,"src":"1765:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":380,"nodeType":"IfStatement","src":"1752:33:4","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1776:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1783:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":378,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1775:10:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":356,"id":379,"nodeType":"Return","src":"1768:17:4"}},{"expression":{"components":[{"hexValue":"74727565","id":381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1807:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":382,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"1813:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":383,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1806:9:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":356,"id":384,"nodeType":"Return","src":"1799:16:4"}]}]},"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1197:137:4","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":387,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nodeType":"FunctionDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":387,"src":"1355:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":347,"name":"uint256","nodeType":"ElementaryTypeName","src":"1355:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":350,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":387,"src":"1366:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":349,"name":"uint256","nodeType":"ElementaryTypeName","src":"1366:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1354:22:4"},"returnParameters":{"id":356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":353,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":387,"src":"1400:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":352,"name":"bool","nodeType":"ElementaryTypeName","src":"1400:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":355,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":387,"src":"1406:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":354,"name":"uint256","nodeType":"ElementaryTypeName","src":"1406:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1399:15:4"},"scope":594,"src":"1339:493:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":414,"nodeType":"Block","src":"2057:114:4","statements":[{"id":413,"nodeType":"UncheckedBlock","src":"2067:98:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":399,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"2095:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2095:6:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":406,"nodeType":"IfStatement","src":"2091:29:4","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2111:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2118:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":404,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2110:10:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":398,"id":405,"nodeType":"Return","src":"2103:17:4"}},{"expression":{"components":[{"hexValue":"74727565","id":407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2142:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":408,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"2148:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":409,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"2152:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2148:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":411,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2141:13:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":398,"id":412,"nodeType":"Return","src":"2134:20:4"}]}]},"documentation":{"id":388,"nodeType":"StructuredDocumentation","src":"1838:138:4","text":" @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":415,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nodeType":"FunctionDefinition","parameters":{"id":393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":415,"src":"1997:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":389,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":392,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":415,"src":"2008:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":391,"name":"uint256","nodeType":"ElementaryTypeName","src":"2008:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1996:22:4"},"returnParameters":{"id":398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":395,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":415,"src":"2042:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":394,"name":"bool","nodeType":"ElementaryTypeName","src":"2042:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":397,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":415,"src":"2048:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":396,"name":"uint256","nodeType":"ElementaryTypeName","src":"2048:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2041:15:4"},"scope":594,"src":"1981:190:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":442,"nodeType":"Block","src":"2406:114:4","statements":[{"id":441,"nodeType":"UncheckedBlock","src":"2416:98:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":427,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"2444:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2449:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2444:6:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":434,"nodeType":"IfStatement","src":"2440:29:4","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2460:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2467:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":432,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2459:10:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":426,"id":433,"nodeType":"Return","src":"2452:17:4"}},{"expression":{"components":[{"hexValue":"74727565","id":435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2491:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":436,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"2497:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":437,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"2501:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2497:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":439,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2490:13:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":426,"id":440,"nodeType":"Return","src":"2483:20:4"}]}]},"documentation":{"id":416,"nodeType":"StructuredDocumentation","src":"2177:148:4","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":443,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nodeType":"FunctionDefinition","parameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":443,"src":"2346:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":417,"name":"uint256","nodeType":"ElementaryTypeName","src":"2346:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":420,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":443,"src":"2357:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":419,"name":"uint256","nodeType":"ElementaryTypeName","src":"2357:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2345:22:4"},"returnParameters":{"id":426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":423,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":443,"src":"2391:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":422,"name":"bool","nodeType":"ElementaryTypeName","src":"2391:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":425,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":443,"src":"2397:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":424,"name":"uint256","nodeType":"ElementaryTypeName","src":"2397:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2390:15:4"},"scope":594,"src":"2330:190:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":457,"nodeType":"Block","src":"2822:29:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":453,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"2839:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":454,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"2843:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2839:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":452,"id":456,"nodeType":"Return","src":"2832:12:4"}]},"documentation":{"id":444,"nodeType":"StructuredDocumentation","src":"2526:224:4","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":458,"implemented":true,"kind":"function","modifiers":[],"name":"add","nodeType":"FunctionDefinition","parameters":{"id":449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":446,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":458,"src":"2768:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":445,"name":"uint256","nodeType":"ElementaryTypeName","src":"2768:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":448,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":458,"src":"2779:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":447,"name":"uint256","nodeType":"ElementaryTypeName","src":"2779:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2767:22:4"},"returnParameters":{"id":452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":451,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":458,"src":"2813:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":450,"name":"uint256","nodeType":"ElementaryTypeName","src":"2813:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2812:9:4"},"scope":594,"src":"2755:96:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":472,"nodeType":"Block","src":"3189:29:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":468,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"3206:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":469,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"3210:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3206:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":467,"id":471,"nodeType":"Return","src":"3199:12:4"}]},"documentation":{"id":459,"nodeType":"StructuredDocumentation","src":"2857:260:4","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":473,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","parameters":{"id":464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":461,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":473,"src":"3135:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":460,"name":"uint256","nodeType":"ElementaryTypeName","src":"3135:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":463,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":473,"src":"3146:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":462,"name":"uint256","nodeType":"ElementaryTypeName","src":"3146:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3134:22:4"},"returnParameters":{"id":467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":466,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":473,"src":"3180:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":465,"name":"uint256","nodeType":"ElementaryTypeName","src":"3180:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3179:9:4"},"scope":594,"src":"3122:96:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":487,"nodeType":"Block","src":"3532:29:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":483,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"3549:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":484,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"3553:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3549:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":482,"id":486,"nodeType":"Return","src":"3542:12:4"}]},"documentation":{"id":474,"nodeType":"StructuredDocumentation","src":"3224:236:4","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":488,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nodeType":"FunctionDefinition","parameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":476,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":488,"src":"3478:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":475,"name":"uint256","nodeType":"ElementaryTypeName","src":"3478:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":478,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":488,"src":"3489:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":477,"name":"uint256","nodeType":"ElementaryTypeName","src":"3489:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3477:22:4"},"returnParameters":{"id":482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":481,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":488,"src":"3523:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":480,"name":"uint256","nodeType":"ElementaryTypeName","src":"3523:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3522:9:4"},"scope":594,"src":"3465:96:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":502,"nodeType":"Block","src":"3917:29:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":498,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"3934:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":499,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"3938:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3934:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":497,"id":501,"nodeType":"Return","src":"3927:12:4"}]},"documentation":{"id":489,"nodeType":"StructuredDocumentation","src":"3567:278:4","text":" @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."},"id":503,"implemented":true,"kind":"function","modifiers":[],"name":"div","nodeType":"FunctionDefinition","parameters":{"id":494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":491,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":503,"src":"3863:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":490,"name":"uint256","nodeType":"ElementaryTypeName","src":"3863:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":493,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":503,"src":"3874:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":492,"name":"uint256","nodeType":"ElementaryTypeName","src":"3874:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3862:22:4"},"returnParameters":{"id":497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":496,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":503,"src":"3908:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":495,"name":"uint256","nodeType":"ElementaryTypeName","src":"3908:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3907:9:4"},"scope":594,"src":"3850:96:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":517,"nodeType":"Block","src":"4466:29:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":513,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"4483:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":514,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"4487:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4483:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":512,"id":516,"nodeType":"Return","src":"4476:12:4"}]},"documentation":{"id":504,"nodeType":"StructuredDocumentation","src":"3952:442:4","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":518,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nodeType":"FunctionDefinition","parameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":506,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":518,"src":"4412:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":505,"name":"uint256","nodeType":"ElementaryTypeName","src":"4412:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":508,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":518,"src":"4423:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":507,"name":"uint256","nodeType":"ElementaryTypeName","src":"4423:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4411:22:4"},"returnParameters":{"id":512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":511,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":518,"src":"4457:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":510,"name":"uint256","nodeType":"ElementaryTypeName","src":"4457:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4456:9:4"},"scope":594,"src":"4399:96:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":542,"nodeType":"Block","src":"5084:106:4","statements":[{"id":541,"nodeType":"UncheckedBlock","src":"5094:90:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":531,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"5126:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":532,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"5131:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5126:6:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":534,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"5134:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":530,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5118:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5118:29:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":536,"nodeType":"ExpressionStatement","src":"5118:29:4"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":537,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"5168:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":538,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"5172:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5168:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":529,"id":540,"nodeType":"Return","src":"5161:12:4"}]}]},"documentation":{"id":519,"nodeType":"StructuredDocumentation","src":"4501:453:4","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":543,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","parameters":{"id":526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":521,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":543,"src":"4981:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":520,"name":"uint256","nodeType":"ElementaryTypeName","src":"4981:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":523,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":543,"src":"5000:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":522,"name":"uint256","nodeType":"ElementaryTypeName","src":"5000:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":525,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":543,"src":"5019:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":524,"name":"string","nodeType":"ElementaryTypeName","src":"5019:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4971:80:4"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":528,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":543,"src":"5075:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":527,"name":"uint256","nodeType":"ElementaryTypeName","src":"5075:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5074:9:4"},"scope":594,"src":"4959:231:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":567,"nodeType":"Block","src":"5799:105:4","statements":[{"id":566,"nodeType":"UncheckedBlock","src":"5809:89:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":556,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"5841:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5845:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5841:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":559,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"5848:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":555,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5833:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5833:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":561,"nodeType":"ExpressionStatement","src":"5833:28:4"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":562,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"5882:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":563,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"5886:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5882:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":554,"id":565,"nodeType":"Return","src":"5875:12:4"}]}]},"documentation":{"id":544,"nodeType":"StructuredDocumentation","src":"5196:473:4","text":" @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":568,"implemented":true,"kind":"function","modifiers":[],"name":"div","nodeType":"FunctionDefinition","parameters":{"id":551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":546,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":568,"src":"5696:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":545,"name":"uint256","nodeType":"ElementaryTypeName","src":"5696:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":548,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":568,"src":"5715:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":547,"name":"uint256","nodeType":"ElementaryTypeName","src":"5715:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":550,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":568,"src":"5734:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":549,"name":"string","nodeType":"ElementaryTypeName","src":"5734:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5686:80:4"},"returnParameters":{"id":554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":553,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":568,"src":"5790:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":552,"name":"uint256","nodeType":"ElementaryTypeName","src":"5790:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5789:9:4"},"scope":594,"src":"5674:230:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":592,"nodeType":"Block","src":"6675:105:4","statements":[{"id":591,"nodeType":"UncheckedBlock","src":"6685:89:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":581,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"6717:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6721:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6717:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":584,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"6724:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":580,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6709:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6709:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":586,"nodeType":"ExpressionStatement","src":"6709:28:4"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":587,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"6758:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":588,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"6762:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6758:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":579,"id":590,"nodeType":"Return","src":"6751:12:4"}]}]},"documentation":{"id":569,"nodeType":"StructuredDocumentation","src":"5910:635:4","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":593,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nodeType":"FunctionDefinition","parameters":{"id":576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":571,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":593,"src":"6572:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":570,"name":"uint256","nodeType":"ElementaryTypeName","src":"6572:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":573,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":593,"src":"6591:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":572,"name":"uint256","nodeType":"ElementaryTypeName","src":"6591:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":575,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":593,"src":"6610:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":574,"name":"string","nodeType":"ElementaryTypeName","src":"6610:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6562:80:4"},"returnParameters":{"id":579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":578,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":593,"src":"6666:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":577,"name":"uint256","nodeType":"ElementaryTypeName","src":"6666:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6665:9:4"},"scope":594,"src":"6550:230:4","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":595,"src":"482:6300:4"}],"src":"107:6676:4"},"id":4},"contracts/FoolLogic.sol":{"ast":{"absolutePath":"contracts/FoolLogic.sol","exportedSymbols":{"Context":[282],"FoolLogic":[727],"FoolVault":[808],"IERC20":[611],"Ownable":[112],"Pausable":[220],"ReentrancyGuard":[260],"SafeMath":[594]},"id":728,"nodeType":"SourceUnit","nodes":[{"id":596,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"0:23:5"},{"absolutePath":"@openzeppelin/contracts4.7.3/access/Ownable.sol","file":"@openzeppelin/contracts4.7.3/access/Ownable.sol","id":597,"nodeType":"ImportDirective","scope":728,"sourceUnit":113,"src":"25:57:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts4.7.3/utils/math/SafeMath.sol","file":"@openzeppelin/contracts4.7.3/utils/math/SafeMath.sol","id":598,"nodeType":"ImportDirective","scope":728,"sourceUnit":595,"src":"83:62:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts4.7.3/security/Pausable.sol","file":"@openzeppelin/contracts4.7.3/security/Pausable.sol","id":599,"nodeType":"ImportDirective","scope":728,"sourceUnit":221,"src":"146:60:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts4.7.3/security/ReentrancyGuard.sol","file":"@openzeppelin/contracts4.7.3/security/ReentrancyGuard.sol","id":600,"nodeType":"ImportDirective","scope":728,"sourceUnit":261,"src":"207:67:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/FoolVault.sol","file":"./FoolVault.sol","id":601,"nodeType":"ImportDirective","scope":728,"sourceUnit":809,"src":"275:25:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":611,"linearizedBaseContracts":[611],"name":"IERC20","nodeType":"ContractDefinition","nodes":[{"functionSelector":"a9059cbb","id":610,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":603,"mutability":"mutable","name":"_to","nodeType":"VariableDeclaration","scope":610,"src":"343:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":602,"name":"address","nodeType":"ElementaryTypeName","src":"343:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":605,"mutability":"mutable","name":"_value","nodeType":"VariableDeclaration","scope":610,"src":"356:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":604,"name":"uint256","nodeType":"ElementaryTypeName","src":"356:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"342:29:5"},"returnParameters":{"id":609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":608,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":610,"src":"390:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":607,"name":"bool","nodeType":"ElementaryTypeName","src":"390:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"389:6:5"},"scope":611,"src":"325:71:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":728,"src":"302:96:5"},{"abstract":false,"baseContracts":[{"baseName":{"id":612,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":112,"src":"422:7:5"},"id":613,"nodeType":"InheritanceSpecifier","src":"422:7:5"},{"baseName":{"id":614,"name":"Pausable","nodeType":"IdentifierPath","referencedDeclaration":220,"src":"431:8:5"},"id":615,"nodeType":"InheritanceSpecifier","src":"431:8:5"},{"baseName":{"id":616,"name":"ReentrancyGuard","nodeType":"IdentifierPath","referencedDeclaration":260,"src":"441:15:5"},"id":617,"nodeType":"InheritanceSpecifier","src":"441:15:5"}],"contractDependencies":[112,220,260,282],"contractKind":"contract","fullyImplemented":true,"id":727,"linearizedBaseContracts":[727,260,220,112,282],"name":"FoolLogic","nodeType":"ContractDefinition","nodes":[{"id":620,"libraryName":{"id":618,"name":"SafeMath","nodeType":"IdentifierPath","referencedDeclaration":594,"src":"468:8:5"},"nodeType":"UsingForDirective","src":"462:27:5","typeName":{"id":619,"name":"uint256","nodeType":"ElementaryTypeName","src":"481:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":622,"mutability":"mutable","name":"eternalStorage","nodeType":"VariableDeclaration","scope":727,"src":"492:22:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":621,"name":"address","nodeType":"ElementaryTypeName","src":"492:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"body":{"id":631,"nodeType":"Block","src":"556:43:5","statements":[{"expression":{"id":629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":627,"name":"eternalStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"562:14:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":628,"name":"_eternalStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"579:15:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"562:32:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":630,"nodeType":"ExpressionStatement","src":"562:32:5"}]},"id":632,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":624,"mutability":"mutable","name":"_eternalStorage","nodeType":"VariableDeclaration","scope":632,"src":"531:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"531:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"530:25:5"},"returnParameters":{"id":626,"nodeType":"ParameterList","parameters":[],"src":"556:0:5"},"scope":727,"src":"519:80:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":640,"nodeType":"Block","src":"637:19:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":637,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"643:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"643:8:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":639,"nodeType":"ExpressionStatement","src":"643:8:5"}]},"functionSelector":"8456cb59","id":641,"implemented":true,"kind":"function","modifiers":[{"id":635,"modifierName":{"id":634,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"627:9:5"},"nodeType":"ModifierInvocation","src":"627:9:5"}],"name":"pause","nodeType":"FunctionDefinition","parameters":{"id":633,"nodeType":"ParameterList","parameters":[],"src":"617:2:5"},"returnParameters":{"id":636,"nodeType":"ParameterList","parameters":[],"src":"637:0:5"},"scope":727,"src":"603:53:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":649,"nodeType":"Block","src":"696:21:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":646,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"702:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"702:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":648,"nodeType":"ExpressionStatement","src":"702:10:5"}]},"functionSelector":"3f4ba83a","id":650,"implemented":true,"kind":"function","modifiers":[{"id":644,"modifierName":{"id":643,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"686:9:5"},"nodeType":"ModifierInvocation","src":"686:9:5"}],"name":"unpause","nodeType":"FunctionDefinition","parameters":{"id":642,"nodeType":"ParameterList","parameters":[],"src":"676:2:5"},"returnParameters":{"id":645,"nodeType":"ParameterList","parameters":[],"src":"696:0:5"},"scope":727,"src":"660:57:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":725,"nodeType":"Block","src":"836:478:5","statements":[{"assignments":[665],"declarations":[{"constant":false,"id":665,"mutability":"mutable","name":"usdt","nodeType":"VariableDeclaration","scope":725,"src":"842:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$611","typeString":"contract IERC20"},"typeName":{"id":664,"nodeType":"UserDefinedTypeName","pathNode":{"id":663,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":611,"src":"842:6:5"},"referencedDeclaration":611,"src":"842:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$611","typeString":"contract IERC20"}},"visibility":"internal"}],"id":672,"initialValue":{"arguments":[{"arguments":[{"hexValue":"307864414331374639353844326565353233613232303632303639393435393743313344383331656337","id":669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"871:42:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xdAC17F958D2ee523a2206206994597C13D831ec7"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"863:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":667,"name":"address","nodeType":"ElementaryTypeName","src":"863:7:5","typeDescriptions":{}}},"id":670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"863:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":666,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"856:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$611_$","typeString":"type(contract IERC20)"}},"id":671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"856:59:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$611","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"842:73:5"},{"assignments":[675],"declarations":[{"constant":false,"id":675,"mutability":"mutable","name":"vault","nodeType":"VariableDeclaration","scope":725,"src":"921:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_FoolVault_$808","typeString":"contract FoolVault"},"typeName":{"id":674,"nodeType":"UserDefinedTypeName","pathNode":{"id":673,"name":"FoolVault","nodeType":"IdentifierPath","referencedDeclaration":808,"src":"921:9:5"},"referencedDeclaration":808,"src":"921:9:5","typeDescriptions":{"typeIdentifier":"t_contract$_FoolVault_$808","typeString":"contract FoolVault"}},"visibility":"internal"}],"id":679,"initialValue":{"arguments":[{"id":677,"name":"eternalStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"949:14:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":676,"name":"FoolVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"939:9:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FoolVault_$808_$","typeString":"type(contract FoolVault)"}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"939:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_FoolVault_$808","typeString":"contract FoolVault"}},"nodeType":"VariableDeclarationStatement","src":"921:43:5"},{"assignments":[681],"declarations":[{"constant":false,"id":681,"mutability":"mutable","name":"internalDeposit","nodeType":"VariableDeclaration","scope":725,"src":"971:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":680,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":685,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":682,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"997:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_FoolVault_$808","typeString":"contract FoolVault"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getLastDeposit","nodeType":"MemberAccess","referencedDeclaration":775,"src":"997:20:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"997:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"971:48:5"},{"assignments":[687],"declarations":[{"constant":false,"id":687,"mutability":"mutable","name":"internalFool","nodeType":"VariableDeclaration","scope":725,"src":"1025:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":686,"name":"address","nodeType":"ElementaryTypeName","src":"1025:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":691,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":688,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"1048:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_FoolVault_$808","typeString":"contract FoolVault"}},"id":689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getLastFool","nodeType":"MemberAccess","referencedDeclaration":783,"src":"1048:17:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1048:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1025:42:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":693,"name":"_lastDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"1081:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":694,"name":"internalDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"1097:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1115:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1097:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1081:35:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6465706f73697420697320746f6f20736d616c6c","id":698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1118:22:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_586be7e8462046fd987db618cf087e783a3cba78f0a0e0e3ea724a6cb65a295a","typeString":"literal_string \"deposit is too small\""},"value":"deposit is too small"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_586be7e8462046fd987db618cf087e783a3cba78f0a0e0e3ea724a6cb65a295a","typeString":"literal_string \"deposit is too small\""}],"id":692,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1073:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1073:68:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":700,"nodeType":"ExpressionStatement","src":"1073:68:5"},{"expression":{"arguments":[{"id":704,"name":"_lastDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"1171:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":701,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"1150:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_FoolVault_$808","typeString":"contract FoolVault"}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"setLastDeposit","nodeType":"MemberAccess","referencedDeclaration":795,"src":"1150:20:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1150:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":706,"nodeType":"ExpressionStatement","src":"1150:34:5"},{"expression":{"arguments":[{"id":710,"name":"_lastFool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"1208:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":707,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"1190:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_FoolVault_$808","typeString":"contract FoolVault"}},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"setLastFool","nodeType":"MemberAccess","referencedDeclaration":807,"src":"1190:17:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1190:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":712,"nodeType":"ExpressionStatement","src":"1190:28:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":713,"name":"internalDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"1229:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1247:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1229:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":724,"nodeType":"IfStatement","src":"1225:85:5","trueBody":{"id":723,"nodeType":"Block","src":"1250:60:5","statements":[{"expression":{"arguments":[{"id":719,"name":"internalFool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"1273:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":720,"name":"internalDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"1287:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":716,"name":"usdt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"1259:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$611","typeString":"contract IERC20"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":610,"src":"1259:13:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1259:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":722,"nodeType":"ExpressionStatement","src":"1259:44:5"}]}}]},"functionSelector":"697716fb","id":726,"implemented":true,"kind":"function","modifiers":[{"id":657,"modifierName":{"id":656,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"795:9:5"},"nodeType":"ModifierInvocation","src":"795:9:5"},{"arguments":[],"id":659,"modifierName":{"id":658,"name":"whenNotPaused","nodeType":"IdentifierPath","referencedDeclaration":147,"src":"805:13:5"},"nodeType":"ModifierInvocation","src":"805:15:5"},{"arguments":[],"id":661,"modifierName":{"id":660,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":259,"src":"821:12:5"},"nodeType":"ModifierInvocation","src":"821:14:5"}],"name":"recordLastFool","nodeType":"FunctionDefinition","parameters":{"id":655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":652,"mutability":"mutable","name":"_lastFool","nodeType":"VariableDeclaration","scope":726,"src":"745:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":651,"name":"address","nodeType":"ElementaryTypeName","src":"745:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":654,"mutability":"mutable","name":"_lastDeposit","nodeType":"VariableDeclaration","scope":726,"src":"764:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":653,"name":"uint256","nodeType":"ElementaryTypeName","src":"764:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"744:41:5"},"returnParameters":{"id":662,"nodeType":"ParameterList","parameters":[],"src":"836:0:5"},"scope":727,"src":"721:593:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":728,"src":"400:916:5"}],"src":"0:1316:5"},"id":5},"contracts/FoolVault.sol":{"ast":{"absolutePath":"contracts/FoolVault.sol","exportedSymbols":{"FoolVault":[808]},"id":809,"nodeType":"SourceUnit","nodes":[{"id":729,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"0:23:6"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":808,"linearizedBaseContracts":[808],"name":"FoolVault","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":733,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":808,"src":"49:26:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":730,"name":"address","nodeType":"ElementaryTypeName","src":"49:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"expression":{"id":731,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"65:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"65:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":735,"mutability":"mutable","name":"latestVersion","nodeType":"VariableDeclaration","scope":808,"src":"79:21:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":734,"name":"address","nodeType":"ElementaryTypeName","src":"79:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":737,"mutability":"mutable","name":"lastFool","nodeType":"VariableDeclaration","scope":808,"src":"104:16:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":736,"name":"address","nodeType":"ElementaryTypeName","src":"104:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":739,"mutability":"mutable","name":"lastDeposit","nodeType":"VariableDeclaration","scope":808,"src":"124:19:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":738,"name":"uint256","nodeType":"ElementaryTypeName","src":"124:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"body":{"id":749,"nodeType":"Block","src":"177:54:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":742,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"191:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"191:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":744,"name":"latestVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"205:13:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"191:27:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":741,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"183:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"183:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":747,"nodeType":"ExpressionStatement","src":"183:36:6"},{"id":748,"nodeType":"PlaceholderStatement","src":"225:1:6"}]},"id":750,"name":"onlyLatestVersion","nodeType":"ModifierDefinition","parameters":{"id":740,"nodeType":"ParameterList","parameters":[],"src":"174:2:6"},"src":"148:83:6","virtual":false,"visibility":"internal"},{"body":{"id":766,"nodeType":"Block","src":"287:72:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":756,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"301:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"301:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":758,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"315:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"301:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":755,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"293:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"293:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":761,"nodeType":"ExpressionStatement","src":"293:28:6"},{"expression":{"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":762,"name":"latestVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"327:13:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":763,"name":"_newVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"343:11:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"327:27:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":765,"nodeType":"ExpressionStatement","src":"327:27:6"}]},"functionSelector":"d28eb963","id":767,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeVersion","nodeType":"FunctionDefinition","parameters":{"id":753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"_newVersion","nodeType":"VariableDeclaration","scope":767,"src":"259:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":751,"name":"address","nodeType":"ElementaryTypeName","src":"259:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"258:21:6"},"returnParameters":{"id":754,"nodeType":"ParameterList","parameters":[],"src":"287:0:6"},"scope":808,"src":"235:124:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":774,"nodeType":"Block","src":"448:29:6","statements":[{"expression":{"id":772,"name":"lastDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"461:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":771,"id":773,"nodeType":"Return","src":"454:18:6"}]},"functionSelector":"3c78934d","id":775,"implemented":true,"kind":"function","modifiers":[],"name":"getLastDeposit","nodeType":"FunctionDefinition","parameters":{"id":768,"nodeType":"ParameterList","parameters":[],"src":"414:2:6"},"returnParameters":{"id":771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":770,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":775,"src":"439:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":769,"name":"uint256","nodeType":"ElementaryTypeName","src":"439:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"438:9:6"},"scope":808,"src":"391:86:6","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":782,"nodeType":"Block","src":"535:26:6","statements":[{"expression":{"id":780,"name":"lastFool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"548:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":779,"id":781,"nodeType":"Return","src":"541:15:6"}]},"functionSelector":"5cbcf01d","id":783,"implemented":true,"kind":"function","modifiers":[],"name":"getLastFool","nodeType":"FunctionDefinition","parameters":{"id":776,"nodeType":"ParameterList","parameters":[],"src":"501:2:6"},"returnParameters":{"id":779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":778,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":783,"src":"526:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":777,"name":"address","nodeType":"ElementaryTypeName","src":"526:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"525:9:6"},"scope":808,"src":"481:80:6","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":794,"nodeType":"Block","src":"662:31:6","statements":[{"expression":{"id":792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":790,"name":"lastDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"668:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":791,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"682:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"668:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":793,"nodeType":"ExpressionStatement","src":"668:20:6"}]},"functionSelector":"03965994","id":795,"implemented":true,"kind":"function","modifiers":[{"id":788,"modifierName":{"id":787,"name":"onlyLatestVersion","nodeType":"IdentifierPath","referencedDeclaration":750,"src":"635:17:6"},"nodeType":"ModifierInvocation","src":"635:17:6"}],"name":"setLastDeposit","nodeType":"FunctionDefinition","parameters":{"id":786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":785,"mutability":"mutable","name":"_value","nodeType":"VariableDeclaration","scope":795,"src":"619:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":784,"name":"uint256","nodeType":"ElementaryTypeName","src":"619:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"618:16:6"},"returnParameters":{"id":789,"nodeType":"ParameterList","parameters":[],"src":"662:0:6"},"scope":808,"src":"595:98:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":806,"nodeType":"Block","src":"761:28:6","statements":[{"expression":{"id":804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":802,"name":"lastFool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"767:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":803,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"778:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"767:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":805,"nodeType":"ExpressionStatement","src":"767:17:6"}]},"functionSelector":"9da93f7b","id":807,"implemented":true,"kind":"function","modifiers":[{"id":800,"modifierName":{"id":799,"name":"onlyLatestVersion","nodeType":"IdentifierPath","referencedDeclaration":750,"src":"734:17:6"},"nodeType":"ModifierInvocation","src":"734:17:6"}],"name":"setLastFool","nodeType":"FunctionDefinition","parameters":{"id":798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":797,"mutability":"mutable","name":"_value","nodeType":"VariableDeclaration","scope":807,"src":"718:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":796,"name":"address","nodeType":"ElementaryTypeName","src":"718:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"717:16:6"},"returnParameters":{"id":801,"nodeType":"ParameterList","parameters":[],"src":"761:0:6"},"scope":808,"src":"697:92:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":809,"src":"25:766:6"}],"src":"0:791:6"},"id":6}},"contracts":{"@openzeppelin/contracts4.7.3/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts4.7.3/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts4.7.3/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts4.7.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts4.7.3/security/Pausable.sol":{"Pausable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts4.7.3/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts4.7.3/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts4.7.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts4.7.3/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts4.7.3/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts4.7.3/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}"}},"@openzeppelin/contracts4.7.3/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts4.7.3/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts4.7.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts4.7.3/utils/math/SafeMath.sol":{"SafeMath":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122093a9512c660181537d11f30a6f06e46b1a50f80e0e329eded5318ec2ea2c19b264736f6c63430008010033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 0xA9 MLOAD 0x2C PUSH7 0x181537D11F30A PUSH16 0x6E46B1A50F80E0E329EDED5318EC2EA 0x2C NOT 0xB2 PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ","sourceMap":"482:6300:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122093a9512c660181537d11f30a6f06e46b1a50f80e0e329eded5318ec2ea2c19b264736f6c63430008010033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 0xA9 MLOAD 0x2C PUSH7 0x181537D11F30A PUSH16 0x6E46B1A50F80E0E329EDED5318EC2EA 0x2C NOT 0xB2 PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ","sourceMap":"482:6300:4:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts4.7.3/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts4.7.3/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}"}},"contracts/FoolLogic.sol":{"FoolLogic":{"abi":[{"inputs":[{"internalType":"address","name":"_eternalStorage","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_lastFool","type":"address"},{"internalType":"uint256","name":"_lastDeposit","type":"uint256"}],"name":"recordLastFool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:805:7","statements":[{"body":{"nodeType":"YulBlock","src":"70:80:7","statements":[{"nodeType":"YulAssignment","src":"80:22:7","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"89:5:7"},"nodeType":"YulFunctionCall","src":"89:13:7"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"80:5:7"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"138:5:7"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"111:26:7"},"nodeType":"YulFunctionCall","src":"111:33:7"},"nodeType":"YulExpressionStatement","src":"111:33:7"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"48:6:7","type":""},{"name":"end","nodeType":"YulTypedName","src":"56:3:7","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:7","type":""}],"src":"7:143:7"},{"body":{"nodeType":"YulBlock","src":"233:207:7","statements":[{"body":{"nodeType":"YulBlock","src":"279:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"288:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"291:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"281:6:7"},"nodeType":"YulFunctionCall","src":"281:12:7"},"nodeType":"YulExpressionStatement","src":"281:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"254:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"263:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"250:3:7"},"nodeType":"YulFunctionCall","src":"250:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"275:2:7","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"246:3:7"},"nodeType":"YulFunctionCall","src":"246:32:7"},"nodeType":"YulIf","src":"243:2:7"},{"nodeType":"YulBlock","src":"305:128:7","statements":[{"nodeType":"YulVariableDeclaration","src":"320:15:7","value":{"kind":"number","nodeType":"YulLiteral","src":"334:1:7","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"324:6:7","type":""}]},{"nodeType":"YulAssignment","src":"349:74:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"395:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"406:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"391:3:7"},"nodeType":"YulFunctionCall","src":"391:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"415:7:7"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"359:31:7"},"nodeType":"YulFunctionCall","src":"359:64:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"349:6:7"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"203:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"214:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"226:6:7","type":""}],"src":"156:284:7"},{"body":{"nodeType":"YulBlock","src":"491:51:7","statements":[{"nodeType":"YulAssignment","src":"501:35:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"530:5:7"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"512:17:7"},"nodeType":"YulFunctionCall","src":"512:24:7"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"501:7:7"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"473:5:7","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"483:7:7","type":""}],"src":"446:96:7"},{"body":{"nodeType":"YulBlock","src":"593:81:7","statements":[{"nodeType":"YulAssignment","src":"603:65:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"618:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"625:42:7","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"614:3:7"},"nodeType":"YulFunctionCall","src":"614:54:7"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"603:7:7"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"575:5:7","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"585:7:7","type":""}],"src":"548:126:7"},{"body":{"nodeType":"YulBlock","src":"723:79:7","statements":[{"body":{"nodeType":"YulBlock","src":"780:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"789:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"792:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"782:6:7"},"nodeType":"YulFunctionCall","src":"782:12:7"},"nodeType":"YulExpressionStatement","src":"782:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"746:5:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"771:5:7"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"753:17:7"},"nodeType":"YulFunctionCall","src":"753:24:7"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"743:2:7"},"nodeType":"YulFunctionCall","src":"743:35:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"736:6:7"},"nodeType":"YulFunctionCall","src":"736:43:7"},"nodeType":"YulIf","src":"733:2:7"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"716:5:7","type":""}],"src":"680:122:7"}]},"contents":"{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n","id":7,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162001047380380620010478339818101604052810190620000379190620001a3565b620000576200004b620000c060201b60201c565b620000c860201b60201c565b60008060146101000a81548160ff0219169083151502179055506001808190555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200021d565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200019d8162000203565b92915050565b600060208284031215620001b657600080fd5b6000620001c6848285016200018c565b91505092915050565b6000620001dc82620001e3565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200020e81620001cf565b81146200021a57600080fd5b50565b610e1a806200022d6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063715018a61161005b578063715018a6146100c65780638456cb59146100d05780638da5cb5b146100da578063f2fde38b146100f85761007d565b80633f4ba83a146100825780635c975abb1461008c578063697716fb146100aa575b600080fd5b61008a610114565b005b610094610126565b6040516100a19190610aab565b60405180910390f35b6100c460048036038101906100bf91906108da565b61013c565b005b6100ce6104aa565b005b6100d86104be565b005b6100e26104d0565b6040516100ef9190610a67565b60405180910390f35b610112600480360381019061010d9190610888565b6104f9565b005b61011c61057d565b6101246105fb565b565b60008060149054906101000a900460ff16905090565b61014461057d565b61014c61065d565b60026001541415610192576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018990610b66565b60405180910390fd5b6002600181905550600073dac17f958d2ee523a2206206994597c13d831ec790506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff16633c78934d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561022257600080fd5b505afa158015610236573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025a919061093f565b905060008273ffffffffffffffffffffffffffffffffffffffff16635cbcf01d6040518163ffffffff1660e01b815260040160206040518083038186803b1580156102a457600080fd5b505afa1580156102b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102dc91906108b1565b90506002826102eb9190610bb2565b85101561032d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032490610b06565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff166303965994866040518263ffffffff1660e01b81526004016103669190610b86565b600060405180830381600087803b15801561038057600080fd5b505af1158015610394573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff16639da93f7b876040518263ffffffff1660e01b81526004016103d19190610a67565b600060405180830381600087803b1580156103eb57600080fd5b505af11580156103ff573d6000803e3d6000fd5b50505050600082111561049b578373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82846040518363ffffffff1660e01b8152600401610447929190610a82565b602060405180830381600087803b15801561046157600080fd5b505af1158015610475573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104999190610916565b505b50505050600180819055505050565b6104b261057d565b6104bc60006106a7565b565b6104c661057d565b6104ce61076b565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61050161057d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610571576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056890610ae6565b60405180910390fd5b61057a816106a7565b50565b6105856107ce565b73ffffffffffffffffffffffffffffffffffffffff166105a36104d0565b73ffffffffffffffffffffffffffffffffffffffff16146105f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f090610b46565b60405180910390fd5b565b6106036107d6565b60008060146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6106466107ce565b6040516106539190610a67565b60405180910390a1565b610665610126565b156106a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069c90610b26565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61077361065d565b6001600060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586107b76107ce565b6040516107c49190610a67565b60405180910390a1565b600033905090565b6107de610126565b61081d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081490610ac6565b60405180910390fd5b565b60008135905061082e81610d9f565b92915050565b60008151905061084381610d9f565b92915050565b60008151905061085881610db6565b92915050565b60008135905061086d81610dcd565b92915050565b60008151905061088281610dcd565b92915050565b60006020828403121561089a57600080fd5b60006108a88482850161081f565b91505092915050565b6000602082840312156108c357600080fd5b60006108d184828501610834565b91505092915050565b600080604083850312156108ed57600080fd5b60006108fb8582860161081f565b925050602061090c8582860161085e565b9150509250929050565b60006020828403121561092857600080fd5b600061093684828501610849565b91505092915050565b60006020828403121561095157600080fd5b600061095f84828501610873565b91505092915050565b61097181610c0c565b82525050565b61098081610c1e565b82525050565b6000610993601483610ba1565b915061099e82610c83565b602082019050919050565b60006109b6602683610ba1565b91506109c182610cac565b604082019050919050565b60006109d9601483610ba1565b91506109e482610cfb565b602082019050919050565b60006109fc601083610ba1565b9150610a0782610d24565b602082019050919050565b6000610a1f602083610ba1565b9150610a2a82610d4d565b602082019050919050565b6000610a42601f83610ba1565b9150610a4d82610d76565b602082019050919050565b610a6181610c4a565b82525050565b6000602082019050610a7c6000830184610968565b92915050565b6000604082019050610a976000830185610968565b610aa46020830184610a58565b9392505050565b6000602082019050610ac06000830184610977565b92915050565b60006020820190508181036000830152610adf81610986565b9050919050565b60006020820190508181036000830152610aff816109a9565b9050919050565b60006020820190508181036000830152610b1f816109cc565b9050919050565b60006020820190508181036000830152610b3f816109ef565b9050919050565b60006020820190508181036000830152610b5f81610a12565b9050919050565b60006020820190508181036000830152610b7f81610a35565b9050919050565b6000602082019050610b9b6000830184610a58565b92915050565b600082825260208201905092915050565b6000610bbd82610c4a565b9150610bc883610c4a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c0157610c00610c54565b5b828202905092915050565b6000610c1782610c2a565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f6465706f73697420697320746f6f20736d616c6c000000000000000000000000600082015250565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b610da881610c0c565b8114610db357600080fd5b50565b610dbf81610c1e565b8114610dca57600080fd5b50565b610dd681610c4a565b8114610de157600080fd5b5056fea26469706673582212207206547a29e835aa97c593dbe1b01e2ebad922af93c6ac4b2095aa267da7a75864736f6c63430008010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1047 CODESIZE SUB DUP1 PUSH3 0x1047 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1A3 JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0xC0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xC8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x21D JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x19D DUP2 PUSH3 0x203 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x1C6 DUP5 DUP3 DUP6 ADD PUSH3 0x18C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1DC DUP3 PUSH3 0x1E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x20E DUP2 PUSH3 0x1CF JUMP JUMPDEST DUP2 EQ PUSH3 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xE1A DUP1 PUSH3 0x22D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xF8 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x697716FB EQ PUSH2 0xAA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x114 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x94 PUSH2 0x126 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0xAAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x8DA JUMP JUMPDEST PUSH2 0x13C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCE PUSH2 0x4AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD8 PUSH2 0x4BE JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE2 PUSH2 0x4D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEF SWAP2 SWAP1 PUSH2 0xA67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x112 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x888 JUMP JUMPDEST PUSH2 0x4F9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11C PUSH2 0x57D JUMP JUMPDEST PUSH2 0x124 PUSH2 0x5FB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x57D JUMP JUMPDEST PUSH2 0x14C PUSH2 0x65D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x192 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x189 SWAP1 PUSH2 0xB66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xDAC17F958D2EE523A2206206994597C13D831EC7 SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3C78934D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x236 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x93F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5CBCF01D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x8B1 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP3 PUSH2 0x2EB SWAP2 SWAP1 PUSH2 0xBB2 JUMP JUMPDEST DUP6 LT ISZERO PUSH2 0x32D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x324 SWAP1 PUSH2 0xB06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3965994 DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x366 SWAP2 SWAP1 PUSH2 0xB86 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x394 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9DA93F7B DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0xA67 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 DUP3 GT ISZERO PUSH2 0x49B JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP3 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x447 SWAP3 SWAP2 SWAP1 PUSH2 0xA82 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x461 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x475 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x499 SWAP2 SWAP1 PUSH2 0x916 JUMP JUMPDEST POP JUMPDEST POP POP POP POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x4B2 PUSH2 0x57D JUMP JUMPDEST PUSH2 0x4BC PUSH1 0x0 PUSH2 0x6A7 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x4C6 PUSH2 0x57D JUMP JUMPDEST PUSH2 0x4CE PUSH2 0x76B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x501 PUSH2 0x57D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x571 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x568 SWAP1 PUSH2 0xAE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x57A DUP2 PUSH2 0x6A7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x585 PUSH2 0x7CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5A3 PUSH2 0x4D0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F0 SWAP1 PUSH2 0xB46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x603 PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x646 PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x653 SWAP2 SWAP1 PUSH2 0xA67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x665 PUSH2 0x126 JUMP JUMPDEST ISZERO PUSH2 0x6A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69C SWAP1 PUSH2 0xB26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x773 PUSH2 0x65D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x7B7 PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C4 SWAP2 SWAP1 PUSH2 0xA67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7DE PUSH2 0x126 JUMP JUMPDEST PUSH2 0x81D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x814 SWAP1 PUSH2 0xAC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x82E DUP2 PUSH2 0xD9F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x843 DUP2 PUSH2 0xD9F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x858 DUP2 PUSH2 0xDB6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x86D DUP2 PUSH2 0xDCD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x882 DUP2 PUSH2 0xDCD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x89A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8A8 DUP5 DUP3 DUP6 ADD PUSH2 0x81F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8D1 DUP5 DUP3 DUP6 ADD PUSH2 0x834 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8FB DUP6 DUP3 DUP7 ADD PUSH2 0x81F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x90C DUP6 DUP3 DUP7 ADD PUSH2 0x85E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x928 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x936 DUP5 DUP3 DUP6 ADD PUSH2 0x849 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x951 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x95F DUP5 DUP3 DUP6 ADD PUSH2 0x873 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x971 DUP2 PUSH2 0xC0C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x980 DUP2 PUSH2 0xC1E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x993 PUSH1 0x14 DUP4 PUSH2 0xBA1 JUMP JUMPDEST SWAP2 POP PUSH2 0x99E DUP3 PUSH2 0xC83 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B6 PUSH1 0x26 DUP4 PUSH2 0xBA1 JUMP JUMPDEST SWAP2 POP PUSH2 0x9C1 DUP3 PUSH2 0xCAC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D9 PUSH1 0x14 DUP4 PUSH2 0xBA1 JUMP JUMPDEST SWAP2 POP PUSH2 0x9E4 DUP3 PUSH2 0xCFB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9FC PUSH1 0x10 DUP4 PUSH2 0xBA1 JUMP JUMPDEST SWAP2 POP PUSH2 0xA07 DUP3 PUSH2 0xD24 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA1F PUSH1 0x20 DUP4 PUSH2 0xBA1 JUMP JUMPDEST SWAP2 POP PUSH2 0xA2A DUP3 PUSH2 0xD4D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA42 PUSH1 0x1F DUP4 PUSH2 0xBA1 JUMP JUMPDEST SWAP2 POP PUSH2 0xA4D DUP3 PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA61 DUP2 PUSH2 0xC4A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA7C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x968 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA97 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x968 JUMP JUMPDEST PUSH2 0xAA4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA58 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAC0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x977 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xADF DUP2 PUSH2 0x986 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAFF DUP2 PUSH2 0x9A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB1F DUP2 PUSH2 0x9CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB3F DUP2 PUSH2 0x9EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB5F DUP2 PUSH2 0xA12 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB7F DUP2 PUSH2 0xA35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB9B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA58 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBBD DUP3 PUSH2 0xC4A JUMP JUMPDEST SWAP2 POP PUSH2 0xBC8 DUP4 PUSH2 0xC4A JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xC01 JUMPI PUSH2 0xC00 PUSH2 0xC54 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC17 DUP3 PUSH2 0xC2A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6465706F73697420697320746F6F20736D616C6C000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xDA8 DUP2 PUSH2 0xC0C JUMP JUMPDEST DUP2 EQ PUSH2 0xDB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xDBF DUP2 PUSH2 0xC1E JUMP JUMPDEST DUP2 EQ PUSH2 0xDCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xDD6 DUP2 PUSH2 0xC4A JUMP JUMPDEST DUP2 EQ PUSH2 0xDE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0x6547A29E835AA97C593DBE1B01E2EBAD922AF SWAP4 0xC6 0xAC 0x4B KECCAK256 SWAP6 0xAA 0x26 PUSH30 0xA7A75864736F6C6343000801003300000000000000000000000000000000 ","sourceMap":"400:916:5:-:0;;;519:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1006:5:1;996:7;;:15;;;;;;;;;;;;;;;;;;1701:1:2;1806:7;:22;;;;579:15:5;562:14;;:32;;;;;;;;;;;;;;;;;;519:80;400:916;;640:96:3;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2433:187;;:::o;7:143:7:-;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:284::-;;275:2;263:9;254:7;250:23;246:32;243:2;;;291:1;288;281:12;243:2;334:1;359:64;415:7;406:6;395:9;391:22;359:64;:::i;:::-;349:74;;305:128;233:207;;;;:::o;446:96::-;;512:24;530:5;512:24;:::i;:::-;501:35;;491:51;;;:::o;548:126::-;;625:42;618:5;614:54;603:65;;593:81;;;:::o;680:122::-;753:24;771:5;753:24;:::i;:::-;746:5;743:35;733:2;;792:1;789;782:12;733:2;723:79;:::o;400:916:5:-;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:11071:7","statements":[{"body":{"nodeType":"YulBlock","src":"59:87:7","statements":[{"nodeType":"YulAssignment","src":"69:29:7","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"91:6:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"78:12:7"},"nodeType":"YulFunctionCall","src":"78:20:7"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"69:5:7"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"134:5:7"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"107:26:7"},"nodeType":"YulFunctionCall","src":"107:33:7"},"nodeType":"YulExpressionStatement","src":"107:33:7"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37:6:7","type":""},{"name":"end","nodeType":"YulTypedName","src":"45:3:7","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:7","type":""}],"src":"7:139:7"},{"body":{"nodeType":"YulBlock","src":"215:80:7","statements":[{"nodeType":"YulAssignment","src":"225:22:7","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"240:6:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"234:5:7"},"nodeType":"YulFunctionCall","src":"234:13:7"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"225:5:7"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"283:5:7"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"256:26:7"},"nodeType":"YulFunctionCall","src":"256:33:7"},"nodeType":"YulExpressionStatement","src":"256:33:7"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"193:6:7","type":""},{"name":"end","nodeType":"YulTypedName","src":"201:3:7","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"209:5:7","type":""}],"src":"152:143:7"},{"body":{"nodeType":"YulBlock","src":"361:77:7","statements":[{"nodeType":"YulAssignment","src":"371:22:7","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"386:6:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"380:5:7"},"nodeType":"YulFunctionCall","src":"380:13:7"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"371:5:7"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"426:5:7"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"402:23:7"},"nodeType":"YulFunctionCall","src":"402:30:7"},"nodeType":"YulExpressionStatement","src":"402:30:7"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"339:6:7","type":""},{"name":"end","nodeType":"YulTypedName","src":"347:3:7","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"355:5:7","type":""}],"src":"301:137:7"},{"body":{"nodeType":"YulBlock","src":"496:87:7","statements":[{"nodeType":"YulAssignment","src":"506:29:7","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"528:6:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"515:12:7"},"nodeType":"YulFunctionCall","src":"515:20:7"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"506:5:7"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"571:5:7"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"544:26:7"},"nodeType":"YulFunctionCall","src":"544:33:7"},"nodeType":"YulExpressionStatement","src":"544:33:7"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"474:6:7","type":""},{"name":"end","nodeType":"YulTypedName","src":"482:3:7","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"490:5:7","type":""}],"src":"444:139:7"},{"body":{"nodeType":"YulBlock","src":"652:80:7","statements":[{"nodeType":"YulAssignment","src":"662:22:7","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"677:6:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"671:5:7"},"nodeType":"YulFunctionCall","src":"671:13:7"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"662:5:7"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"720:5:7"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"693:26:7"},"nodeType":"YulFunctionCall","src":"693:33:7"},"nodeType":"YulExpressionStatement","src":"693:33:7"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"630:6:7","type":""},{"name":"end","nodeType":"YulTypedName","src":"638:3:7","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"646:5:7","type":""}],"src":"589:143:7"},{"body":{"nodeType":"YulBlock","src":"804:196:7","statements":[{"body":{"nodeType":"YulBlock","src":"850:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"859:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"862:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"852:6:7"},"nodeType":"YulFunctionCall","src":"852:12:7"},"nodeType":"YulExpressionStatement","src":"852:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"825:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"834:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"821:3:7"},"nodeType":"YulFunctionCall","src":"821:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"846:2:7","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"817:3:7"},"nodeType":"YulFunctionCall","src":"817:32:7"},"nodeType":"YulIf","src":"814:2:7"},{"nodeType":"YulBlock","src":"876:117:7","statements":[{"nodeType":"YulVariableDeclaration","src":"891:15:7","value":{"kind":"number","nodeType":"YulLiteral","src":"905:1:7","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"895:6:7","type":""}]},{"nodeType":"YulAssignment","src":"920:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"955:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"966:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"951:3:7"},"nodeType":"YulFunctionCall","src":"951:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"975:7:7"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"930:20:7"},"nodeType":"YulFunctionCall","src":"930:53:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"920:6:7"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"774:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"785:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"797:6:7","type":""}],"src":"738:262:7"},{"body":{"nodeType":"YulBlock","src":"1083:207:7","statements":[{"body":{"nodeType":"YulBlock","src":"1129:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1138:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1141:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1131:6:7"},"nodeType":"YulFunctionCall","src":"1131:12:7"},"nodeType":"YulExpressionStatement","src":"1131:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1104:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"1113:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1100:3:7"},"nodeType":"YulFunctionCall","src":"1100:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"1125:2:7","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1096:3:7"},"nodeType":"YulFunctionCall","src":"1096:32:7"},"nodeType":"YulIf","src":"1093:2:7"},{"nodeType":"YulBlock","src":"1155:128:7","statements":[{"nodeType":"YulVariableDeclaration","src":"1170:15:7","value":{"kind":"number","nodeType":"YulLiteral","src":"1184:1:7","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1174:6:7","type":""}]},{"nodeType":"YulAssignment","src":"1199:74:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1245:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"1256:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1241:3:7"},"nodeType":"YulFunctionCall","src":"1241:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1265:7:7"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1209:31:7"},"nodeType":"YulFunctionCall","src":"1209:64:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1199:6:7"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1053:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1064:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1076:6:7","type":""}],"src":"1006:284:7"},{"body":{"nodeType":"YulBlock","src":"1379:324:7","statements":[{"body":{"nodeType":"YulBlock","src":"1425:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1434:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1437:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1427:6:7"},"nodeType":"YulFunctionCall","src":"1427:12:7"},"nodeType":"YulExpressionStatement","src":"1427:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1400:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"1409:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1396:3:7"},"nodeType":"YulFunctionCall","src":"1396:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"1421:2:7","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1392:3:7"},"nodeType":"YulFunctionCall","src":"1392:32:7"},"nodeType":"YulIf","src":"1389:2:7"},{"nodeType":"YulBlock","src":"1451:117:7","statements":[{"nodeType":"YulVariableDeclaration","src":"1466:15:7","value":{"kind":"number","nodeType":"YulLiteral","src":"1480:1:7","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1470:6:7","type":""}]},{"nodeType":"YulAssignment","src":"1495:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1530:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"1541:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1526:3:7"},"nodeType":"YulFunctionCall","src":"1526:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1550:7:7"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1505:20:7"},"nodeType":"YulFunctionCall","src":"1505:53:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1495:6:7"}]}]},{"nodeType":"YulBlock","src":"1578:118:7","statements":[{"nodeType":"YulVariableDeclaration","src":"1593:16:7","value":{"kind":"number","nodeType":"YulLiteral","src":"1607:2:7","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1597:6:7","type":""}]},{"nodeType":"YulAssignment","src":"1623:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1658:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"1669:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1654:3:7"},"nodeType":"YulFunctionCall","src":"1654:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1678:7:7"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1633:20:7"},"nodeType":"YulFunctionCall","src":"1633:53:7"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1623:6:7"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1341:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1352:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1364:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1372:6:7","type":""}],"src":"1296:407:7"},{"body":{"nodeType":"YulBlock","src":"1783:204:7","statements":[{"body":{"nodeType":"YulBlock","src":"1829:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1838:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1841:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1831:6:7"},"nodeType":"YulFunctionCall","src":"1831:12:7"},"nodeType":"YulExpressionStatement","src":"1831:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1804:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"1813:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1800:3:7"},"nodeType":"YulFunctionCall","src":"1800:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"1825:2:7","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1796:3:7"},"nodeType":"YulFunctionCall","src":"1796:32:7"},"nodeType":"YulIf","src":"1793:2:7"},{"nodeType":"YulBlock","src":"1855:125:7","statements":[{"nodeType":"YulVariableDeclaration","src":"1870:15:7","value":{"kind":"number","nodeType":"YulLiteral","src":"1884:1:7","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1874:6:7","type":""}]},{"nodeType":"YulAssignment","src":"1899:71:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1942:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"1953:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1938:3:7"},"nodeType":"YulFunctionCall","src":"1938:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1962:7:7"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"1909:28:7"},"nodeType":"YulFunctionCall","src":"1909:61:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1899:6:7"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1753:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1764:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1776:6:7","type":""}],"src":"1709:278:7"},{"body":{"nodeType":"YulBlock","src":"2070:207:7","statements":[{"body":{"nodeType":"YulBlock","src":"2116:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2125:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2128:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2118:6:7"},"nodeType":"YulFunctionCall","src":"2118:12:7"},"nodeType":"YulExpressionStatement","src":"2118:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2091:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"2100:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2087:3:7"},"nodeType":"YulFunctionCall","src":"2087:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"2112:2:7","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2083:3:7"},"nodeType":"YulFunctionCall","src":"2083:32:7"},"nodeType":"YulIf","src":"2080:2:7"},{"nodeType":"YulBlock","src":"2142:128:7","statements":[{"nodeType":"YulVariableDeclaration","src":"2157:15:7","value":{"kind":"number","nodeType":"YulLiteral","src":"2171:1:7","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2161:6:7","type":""}]},{"nodeType":"YulAssignment","src":"2186:74:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2232:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"2243:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2228:3:7"},"nodeType":"YulFunctionCall","src":"2228:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2252:7:7"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"2196:31:7"},"nodeType":"YulFunctionCall","src":"2196:64:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2186:6:7"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2040:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2051:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2063:6:7","type":""}],"src":"1993:284:7"},{"body":{"nodeType":"YulBlock","src":"2348:53:7","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2365:3:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2388:5:7"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2370:17:7"},"nodeType":"YulFunctionCall","src":"2370:24:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2358:6:7"},"nodeType":"YulFunctionCall","src":"2358:37:7"},"nodeType":"YulExpressionStatement","src":"2358:37:7"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2336:5:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2343:3:7","type":""}],"src":"2283:118:7"},{"body":{"nodeType":"YulBlock","src":"2466:50:7","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2483:3:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2503:5:7"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"2488:14:7"},"nodeType":"YulFunctionCall","src":"2488:21:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2476:6:7"},"nodeType":"YulFunctionCall","src":"2476:34:7"},"nodeType":"YulExpressionStatement","src":"2476:34:7"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2454:5:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2461:3:7","type":""}],"src":"2407:109:7"},{"body":{"nodeType":"YulBlock","src":"2668:220:7","statements":[{"nodeType":"YulAssignment","src":"2678:74:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2744:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"2749:2:7","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2685:58:7"},"nodeType":"YulFunctionCall","src":"2685:67:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2678:3:7"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2850:3:7"}],"functionName":{"name":"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","nodeType":"YulIdentifier","src":"2761:88:7"},"nodeType":"YulFunctionCall","src":"2761:93:7"},"nodeType":"YulExpressionStatement","src":"2761:93:7"},{"nodeType":"YulAssignment","src":"2863:19:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2874:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"2879:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2870:3:7"},"nodeType":"YulFunctionCall","src":"2870:12:7"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2863:3:7"}]}]},"name":"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2656:3:7","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2664:3:7","type":""}],"src":"2522:366:7"},{"body":{"nodeType":"YulBlock","src":"3040:220:7","statements":[{"nodeType":"YulAssignment","src":"3050:74:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3116:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"3121:2:7","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3057:58:7"},"nodeType":"YulFunctionCall","src":"3057:67:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3050:3:7"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3222:3:7"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"3133:88:7"},"nodeType":"YulFunctionCall","src":"3133:93:7"},"nodeType":"YulExpressionStatement","src":"3133:93:7"},{"nodeType":"YulAssignment","src":"3235:19:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3246:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"3251:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3242:3:7"},"nodeType":"YulFunctionCall","src":"3242:12:7"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3235:3:7"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3028:3:7","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3036:3:7","type":""}],"src":"2894:366:7"},{"body":{"nodeType":"YulBlock","src":"3412:220:7","statements":[{"nodeType":"YulAssignment","src":"3422:74:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3488:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"3493:2:7","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3429:58:7"},"nodeType":"YulFunctionCall","src":"3429:67:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3422:3:7"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3594:3:7"}],"functionName":{"name":"store_literal_in_memory_586be7e8462046fd987db618cf087e783a3cba78f0a0e0e3ea724a6cb65a295a","nodeType":"YulIdentifier","src":"3505:88:7"},"nodeType":"YulFunctionCall","src":"3505:93:7"},"nodeType":"YulExpressionStatement","src":"3505:93:7"},{"nodeType":"YulAssignment","src":"3607:19:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3618:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"3623:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3614:3:7"},"nodeType":"YulFunctionCall","src":"3614:12:7"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3607:3:7"}]}]},"name":"abi_encode_t_stringliteral_586be7e8462046fd987db618cf087e783a3cba78f0a0e0e3ea724a6cb65a295a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3400:3:7","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3408:3:7","type":""}],"src":"3266:366:7"},{"body":{"nodeType":"YulBlock","src":"3784:220:7","statements":[{"nodeType":"YulAssignment","src":"3794:74:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3860:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"3865:2:7","type":"","value":"16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3801:58:7"},"nodeType":"YulFunctionCall","src":"3801:67:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3794:3:7"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3966:3:7"}],"functionName":{"name":"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","nodeType":"YulIdentifier","src":"3877:88:7"},"nodeType":"YulFunctionCall","src":"3877:93:7"},"nodeType":"YulExpressionStatement","src":"3877:93:7"},{"nodeType":"YulAssignment","src":"3979:19:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3990:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"3995:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3986:3:7"},"nodeType":"YulFunctionCall","src":"3986:12:7"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3979:3:7"}]}]},"name":"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3772:3:7","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3780:3:7","type":""}],"src":"3638:366:7"},{"body":{"nodeType":"YulBlock","src":"4156:220:7","statements":[{"nodeType":"YulAssignment","src":"4166:74:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4232:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"4237:2:7","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4173:58:7"},"nodeType":"YulFunctionCall","src":"4173:67:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4166:3:7"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4338:3:7"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"4249:88:7"},"nodeType":"YulFunctionCall","src":"4249:93:7"},"nodeType":"YulExpressionStatement","src":"4249:93:7"},{"nodeType":"YulAssignment","src":"4351:19:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4362:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"4367:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4358:3:7"},"nodeType":"YulFunctionCall","src":"4358:12:7"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4351:3:7"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4144:3:7","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4152:3:7","type":""}],"src":"4010:366:7"},{"body":{"nodeType":"YulBlock","src":"4528:220:7","statements":[{"nodeType":"YulAssignment","src":"4538:74:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4604:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"4609:2:7","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4545:58:7"},"nodeType":"YulFunctionCall","src":"4545:67:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4538:3:7"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4710:3:7"}],"functionName":{"name":"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","nodeType":"YulIdentifier","src":"4621:88:7"},"nodeType":"YulFunctionCall","src":"4621:93:7"},"nodeType":"YulExpressionStatement","src":"4621:93:7"},{"nodeType":"YulAssignment","src":"4723:19:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4734:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"4739:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4730:3:7"},"nodeType":"YulFunctionCall","src":"4730:12:7"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4723:3:7"}]}]},"name":"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4516:3:7","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4524:3:7","type":""}],"src":"4382:366:7"},{"body":{"nodeType":"YulBlock","src":"4819:53:7","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4836:3:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4859:5:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4841:17:7"},"nodeType":"YulFunctionCall","src":"4841:24:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4829:6:7"},"nodeType":"YulFunctionCall","src":"4829:37:7"},"nodeType":"YulExpressionStatement","src":"4829:37:7"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4807:5:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4814:3:7","type":""}],"src":"4754:118:7"},{"body":{"nodeType":"YulBlock","src":"4976:124:7","statements":[{"nodeType":"YulAssignment","src":"4986:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4998:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"5009:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4994:3:7"},"nodeType":"YulFunctionCall","src":"4994:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4986:4:7"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5066:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5079:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"5090:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5075:3:7"},"nodeType":"YulFunctionCall","src":"5075:17:7"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5022:43:7"},"nodeType":"YulFunctionCall","src":"5022:71:7"},"nodeType":"YulExpressionStatement","src":"5022:71:7"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4948:9:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4960:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4971:4:7","type":""}],"src":"4878:222:7"},{"body":{"nodeType":"YulBlock","src":"5232:206:7","statements":[{"nodeType":"YulAssignment","src":"5242:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5254:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"5265:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5250:3:7"},"nodeType":"YulFunctionCall","src":"5250:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5242:4:7"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5322:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5335:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"5346:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5331:3:7"},"nodeType":"YulFunctionCall","src":"5331:17:7"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5278:43:7"},"nodeType":"YulFunctionCall","src":"5278:71:7"},"nodeType":"YulExpressionStatement","src":"5278:71:7"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5403:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5416:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"5427:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5412:3:7"},"nodeType":"YulFunctionCall","src":"5412:18:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5359:43:7"},"nodeType":"YulFunctionCall","src":"5359:72:7"},"nodeType":"YulExpressionStatement","src":"5359:72:7"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5196:9:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5208:6:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5216:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5227:4:7","type":""}],"src":"5106:332:7"},{"body":{"nodeType":"YulBlock","src":"5536:118:7","statements":[{"nodeType":"YulAssignment","src":"5546:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5558:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"5569:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5554:3:7"},"nodeType":"YulFunctionCall","src":"5554:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5546:4:7"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5620:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5633:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"5644:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5629:3:7"},"nodeType":"YulFunctionCall","src":"5629:17:7"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"5582:37:7"},"nodeType":"YulFunctionCall","src":"5582:65:7"},"nodeType":"YulExpressionStatement","src":"5582:65:7"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5508:9:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5520:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5531:4:7","type":""}],"src":"5444:210:7"},{"body":{"nodeType":"YulBlock","src":"5831:248:7","statements":[{"nodeType":"YulAssignment","src":"5841:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5853:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"5864:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5849:3:7"},"nodeType":"YulFunctionCall","src":"5849:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5841:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5888:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"5899:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5884:3:7"},"nodeType":"YulFunctionCall","src":"5884:17:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5907:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"5913:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5903:3:7"},"nodeType":"YulFunctionCall","src":"5903:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5877:6:7"},"nodeType":"YulFunctionCall","src":"5877:47:7"},"nodeType":"YulExpressionStatement","src":"5877:47:7"},{"nodeType":"YulAssignment","src":"5933:139:7","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6067:4:7"}],"functionName":{"name":"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5941:124:7"},"nodeType":"YulFunctionCall","src":"5941:131:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5933:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5811:9:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5826:4:7","type":""}],"src":"5660:419:7"},{"body":{"nodeType":"YulBlock","src":"6256:248:7","statements":[{"nodeType":"YulAssignment","src":"6266:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6278:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"6289:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6274:3:7"},"nodeType":"YulFunctionCall","src":"6274:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6266:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6313:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"6324:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6309:3:7"},"nodeType":"YulFunctionCall","src":"6309:17:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6332:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"6338:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6328:3:7"},"nodeType":"YulFunctionCall","src":"6328:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6302:6:7"},"nodeType":"YulFunctionCall","src":"6302:47:7"},"nodeType":"YulExpressionStatement","src":"6302:47:7"},{"nodeType":"YulAssignment","src":"6358:139:7","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6492:4:7"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6366:124:7"},"nodeType":"YulFunctionCall","src":"6366:131:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6358:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6236:9:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6251:4:7","type":""}],"src":"6085:419:7"},{"body":{"nodeType":"YulBlock","src":"6681:248:7","statements":[{"nodeType":"YulAssignment","src":"6691:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6703:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"6714:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6699:3:7"},"nodeType":"YulFunctionCall","src":"6699:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6691:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6738:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"6749:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6734:3:7"},"nodeType":"YulFunctionCall","src":"6734:17:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6757:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"6763:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6753:3:7"},"nodeType":"YulFunctionCall","src":"6753:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6727:6:7"},"nodeType":"YulFunctionCall","src":"6727:47:7"},"nodeType":"YulExpressionStatement","src":"6727:47:7"},{"nodeType":"YulAssignment","src":"6783:139:7","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6917:4:7"}],"functionName":{"name":"abi_encode_t_stringliteral_586be7e8462046fd987db618cf087e783a3cba78f0a0e0e3ea724a6cb65a295a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6791:124:7"},"nodeType":"YulFunctionCall","src":"6791:131:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6783:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_586be7e8462046fd987db618cf087e783a3cba78f0a0e0e3ea724a6cb65a295a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6661:9:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6676:4:7","type":""}],"src":"6510:419:7"},{"body":{"nodeType":"YulBlock","src":"7106:248:7","statements":[{"nodeType":"YulAssignment","src":"7116:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7128:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"7139:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7124:3:7"},"nodeType":"YulFunctionCall","src":"7124:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7116:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7163:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"7174:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7159:3:7"},"nodeType":"YulFunctionCall","src":"7159:17:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7182:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"7188:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7178:3:7"},"nodeType":"YulFunctionCall","src":"7178:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7152:6:7"},"nodeType":"YulFunctionCall","src":"7152:47:7"},"nodeType":"YulExpressionStatement","src":"7152:47:7"},{"nodeType":"YulAssignment","src":"7208:139:7","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7342:4:7"}],"functionName":{"name":"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7216:124:7"},"nodeType":"YulFunctionCall","src":"7216:131:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7208:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7086:9:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7101:4:7","type":""}],"src":"6935:419:7"},{"body":{"nodeType":"YulBlock","src":"7531:248:7","statements":[{"nodeType":"YulAssignment","src":"7541:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7553:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"7564:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7549:3:7"},"nodeType":"YulFunctionCall","src":"7549:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7541:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7588:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"7599:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7584:3:7"},"nodeType":"YulFunctionCall","src":"7584:17:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7607:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"7613:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7603:3:7"},"nodeType":"YulFunctionCall","src":"7603:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7577:6:7"},"nodeType":"YulFunctionCall","src":"7577:47:7"},"nodeType":"YulExpressionStatement","src":"7577:47:7"},{"nodeType":"YulAssignment","src":"7633:139:7","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7767:4:7"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7641:124:7"},"nodeType":"YulFunctionCall","src":"7641:131:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7633:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7511:9:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7526:4:7","type":""}],"src":"7360:419:7"},{"body":{"nodeType":"YulBlock","src":"7956:248:7","statements":[{"nodeType":"YulAssignment","src":"7966:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7978:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"7989:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7974:3:7"},"nodeType":"YulFunctionCall","src":"7974:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7966:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8013:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"8024:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8009:3:7"},"nodeType":"YulFunctionCall","src":"8009:17:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8032:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"8038:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8028:3:7"},"nodeType":"YulFunctionCall","src":"8028:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8002:6:7"},"nodeType":"YulFunctionCall","src":"8002:47:7"},"nodeType":"YulExpressionStatement","src":"8002:47:7"},{"nodeType":"YulAssignment","src":"8058:139:7","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8192:4:7"}],"functionName":{"name":"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8066:124:7"},"nodeType":"YulFunctionCall","src":"8066:131:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8058:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7936:9:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7951:4:7","type":""}],"src":"7785:419:7"},{"body":{"nodeType":"YulBlock","src":"8308:124:7","statements":[{"nodeType":"YulAssignment","src":"8318:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8330:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"8341:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8326:3:7"},"nodeType":"YulFunctionCall","src":"8326:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8318:4:7"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8398:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8411:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"8422:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8407:3:7"},"nodeType":"YulFunctionCall","src":"8407:17:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8354:43:7"},"nodeType":"YulFunctionCall","src":"8354:71:7"},"nodeType":"YulExpressionStatement","src":"8354:71:7"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8280:9:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8292:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8303:4:7","type":""}],"src":"8210:222:7"},{"body":{"nodeType":"YulBlock","src":"8534:73:7","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8551:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"8556:6:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8544:6:7"},"nodeType":"YulFunctionCall","src":"8544:19:7"},"nodeType":"YulExpressionStatement","src":"8544:19:7"},{"nodeType":"YulAssignment","src":"8572:29:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8591:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"8596:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8587:3:7"},"nodeType":"YulFunctionCall","src":"8587:14:7"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"8572:11:7"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8506:3:7","type":""},{"name":"length","nodeType":"YulTypedName","src":"8511:6:7","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"8522:11:7","type":""}],"src":"8438:169:7"},{"body":{"nodeType":"YulBlock","src":"8661:300:7","statements":[{"nodeType":"YulAssignment","src":"8671:25:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8694:1:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8676:17:7"},"nodeType":"YulFunctionCall","src":"8676:20:7"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"8671:1:7"}]},{"nodeType":"YulAssignment","src":"8705:25:7","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8728:1:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8710:17:7"},"nodeType":"YulFunctionCall","src":"8710:20:7"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"8705:1:7"}]},{"body":{"nodeType":"YulBlock","src":"8903:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8905:16:7"},"nodeType":"YulFunctionCall","src":"8905:18:7"},"nodeType":"YulExpressionStatement","src":"8905:18:7"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8815:1:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8808:6:7"},"nodeType":"YulFunctionCall","src":"8808:9:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8801:6:7"},"nodeType":"YulFunctionCall","src":"8801:17:7"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8823:1:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8830:66:7","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"8898:1:7"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8826:3:7"},"nodeType":"YulFunctionCall","src":"8826:74:7"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8820:2:7"},"nodeType":"YulFunctionCall","src":"8820:81:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8797:3:7"},"nodeType":"YulFunctionCall","src":"8797:105:7"},"nodeType":"YulIf","src":"8794:2:7"},{"nodeType":"YulAssignment","src":"8935:20:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8950:1:7"},{"name":"y","nodeType":"YulIdentifier","src":"8953:1:7"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8946:3:7"},"nodeType":"YulFunctionCall","src":"8946:9:7"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"8935:7:7"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8644:1:7","type":""},{"name":"y","nodeType":"YulTypedName","src":"8647:1:7","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"8653:7:7","type":""}],"src":"8613:348:7"},{"body":{"nodeType":"YulBlock","src":"9012:51:7","statements":[{"nodeType":"YulAssignment","src":"9022:35:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9051:5:7"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"9033:17:7"},"nodeType":"YulFunctionCall","src":"9033:24:7"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9022:7:7"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8994:5:7","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9004:7:7","type":""}],"src":"8967:96:7"},{"body":{"nodeType":"YulBlock","src":"9111:48:7","statements":[{"nodeType":"YulAssignment","src":"9121:32:7","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9146:5:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9139:6:7"},"nodeType":"YulFunctionCall","src":"9139:13:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9132:6:7"},"nodeType":"YulFunctionCall","src":"9132:21:7"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9121:7:7"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9093:5:7","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9103:7:7","type":""}],"src":"9069:90:7"},{"body":{"nodeType":"YulBlock","src":"9210:81:7","statements":[{"nodeType":"YulAssignment","src":"9220:65:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9235:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"9242:42:7","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9231:3:7"},"nodeType":"YulFunctionCall","src":"9231:54:7"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9220:7:7"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9192:5:7","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9202:7:7","type":""}],"src":"9165:126:7"},{"body":{"nodeType":"YulBlock","src":"9342:32:7","statements":[{"nodeType":"YulAssignment","src":"9352:16:7","value":{"name":"value","nodeType":"YulIdentifier","src":"9363:5:7"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9352:7:7"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9324:5:7","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9334:7:7","type":""}],"src":"9297:77:7"},{"body":{"nodeType":"YulBlock","src":"9408:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9425:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9428:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9418:6:7"},"nodeType":"YulFunctionCall","src":"9418:88:7"},"nodeType":"YulExpressionStatement","src":"9418:88:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9522:1:7","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9525:4:7","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9515:6:7"},"nodeType":"YulFunctionCall","src":"9515:15:7"},"nodeType":"YulExpressionStatement","src":"9515:15:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9546:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9549:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9539:6:7"},"nodeType":"YulFunctionCall","src":"9539:15:7"},"nodeType":"YulExpressionStatement","src":"9539:15:7"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"9380:180:7"},{"body":{"nodeType":"YulBlock","src":"9672:64:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9694:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"9702:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9690:3:7"},"nodeType":"YulFunctionCall","src":"9690:14:7"},{"kind":"string","nodeType":"YulLiteral","src":"9706:22:7","type":"","value":"Pausable: not paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9683:6:7"},"nodeType":"YulFunctionCall","src":"9683:46:7"},"nodeType":"YulExpressionStatement","src":"9683:46:7"}]},"name":"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9664:6:7","type":""}],"src":"9566:170:7"},{"body":{"nodeType":"YulBlock","src":"9848:119:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9870:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"9878:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9866:3:7"},"nodeType":"YulFunctionCall","src":"9866:14:7"},{"kind":"string","nodeType":"YulLiteral","src":"9882:34:7","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9859:6:7"},"nodeType":"YulFunctionCall","src":"9859:58:7"},"nodeType":"YulExpressionStatement","src":"9859:58:7"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9938:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"9946:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9934:3:7"},"nodeType":"YulFunctionCall","src":"9934:15:7"},{"kind":"string","nodeType":"YulLiteral","src":"9951:8:7","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9927:6:7"},"nodeType":"YulFunctionCall","src":"9927:33:7"},"nodeType":"YulExpressionStatement","src":"9927:33:7"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9840:6:7","type":""}],"src":"9742:225:7"},{"body":{"nodeType":"YulBlock","src":"10079:64:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10101:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"10109:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10097:3:7"},"nodeType":"YulFunctionCall","src":"10097:14:7"},{"kind":"string","nodeType":"YulLiteral","src":"10113:22:7","type":"","value":"deposit is too small"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10090:6:7"},"nodeType":"YulFunctionCall","src":"10090:46:7"},"nodeType":"YulExpressionStatement","src":"10090:46:7"}]},"name":"store_literal_in_memory_586be7e8462046fd987db618cf087e783a3cba78f0a0e0e3ea724a6cb65a295a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10071:6:7","type":""}],"src":"9973:170:7"},{"body":{"nodeType":"YulBlock","src":"10255:60:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10277:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"10285:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10273:3:7"},"nodeType":"YulFunctionCall","src":"10273:14:7"},{"kind":"string","nodeType":"YulLiteral","src":"10289:18:7","type":"","value":"Pausable: paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10266:6:7"},"nodeType":"YulFunctionCall","src":"10266:42:7"},"nodeType":"YulExpressionStatement","src":"10266:42:7"}]},"name":"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10247:6:7","type":""}],"src":"10149:166:7"},{"body":{"nodeType":"YulBlock","src":"10427:76:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10449:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"10457:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10445:3:7"},"nodeType":"YulFunctionCall","src":"10445:14:7"},{"kind":"string","nodeType":"YulLiteral","src":"10461:34:7","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10438:6:7"},"nodeType":"YulFunctionCall","src":"10438:58:7"},"nodeType":"YulExpressionStatement","src":"10438:58:7"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10419:6:7","type":""}],"src":"10321:182:7"},{"body":{"nodeType":"YulBlock","src":"10615:75:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10637:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"10645:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10633:3:7"},"nodeType":"YulFunctionCall","src":"10633:14:7"},{"kind":"string","nodeType":"YulLiteral","src":"10649:33:7","type":"","value":"ReentrancyGuard: reentrant call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10626:6:7"},"nodeType":"YulFunctionCall","src":"10626:57:7"},"nodeType":"YulExpressionStatement","src":"10626:57:7"}]},"name":"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10607:6:7","type":""}],"src":"10509:181:7"},{"body":{"nodeType":"YulBlock","src":"10739:79:7","statements":[{"body":{"nodeType":"YulBlock","src":"10796:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10805:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10808:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10798:6:7"},"nodeType":"YulFunctionCall","src":"10798:12:7"},"nodeType":"YulExpressionStatement","src":"10798:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10762:5:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10787:5:7"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"10769:17:7"},"nodeType":"YulFunctionCall","src":"10769:24:7"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10759:2:7"},"nodeType":"YulFunctionCall","src":"10759:35:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10752:6:7"},"nodeType":"YulFunctionCall","src":"10752:43:7"},"nodeType":"YulIf","src":"10749:2:7"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10732:5:7","type":""}],"src":"10696:122:7"},{"body":{"nodeType":"YulBlock","src":"10864:76:7","statements":[{"body":{"nodeType":"YulBlock","src":"10918:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10927:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10930:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10920:6:7"},"nodeType":"YulFunctionCall","src":"10920:12:7"},"nodeType":"YulExpressionStatement","src":"10920:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10887:5:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10909:5:7"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"10894:14:7"},"nodeType":"YulFunctionCall","src":"10894:21:7"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10884:2:7"},"nodeType":"YulFunctionCall","src":"10884:32:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10877:6:7"},"nodeType":"YulFunctionCall","src":"10877:40:7"},"nodeType":"YulIf","src":"10874:2:7"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10857:5:7","type":""}],"src":"10824:116:7"},{"body":{"nodeType":"YulBlock","src":"10989:79:7","statements":[{"body":{"nodeType":"YulBlock","src":"11046:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11055:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11058:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11048:6:7"},"nodeType":"YulFunctionCall","src":"11048:12:7"},"nodeType":"YulExpressionStatement","src":"11048:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11012:5:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11037:5:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11019:17:7"},"nodeType":"YulFunctionCall","src":"11019:24:7"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11009:2:7"},"nodeType":"YulFunctionCall","src":"11009:35:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11002:6:7"},"nodeType":"YulFunctionCall","src":"11002:43:7"},"nodeType":"YulIf","src":"10999:2:7"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10982:5:7","type":""}],"src":"10946:122:7"}]},"contents":"{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_586be7e8462046fd987db618cf087e783a3cba78f0a0e0e3ea724a6cb65a295a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_586be7e8462046fd987db618cf087e783a3cba78f0a0e0e3ea724a6cb65a295a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_586be7e8462046fd987db618cf087e783a3cba78f0a0e0e3ea724a6cb65a295a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_586be7e8462046fd987db618cf087e783a3cba78f0a0e0e3ea724a6cb65a295a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_586be7e8462046fd987db618cf087e783a3cba78f0a0e0e3ea724a6cb65a295a(memPtr) {\n\n        mstore(add(memPtr, 0), \"deposit is too small\")\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":7,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061007d5760003560e01c8063715018a61161005b578063715018a6146100c65780638456cb59146100d05780638da5cb5b146100da578063f2fde38b146100f85761007d565b80633f4ba83a146100825780635c975abb1461008c578063697716fb146100aa575b600080fd5b61008a610114565b005b610094610126565b6040516100a19190610aab565b60405180910390f35b6100c460048036038101906100bf91906108da565b61013c565b005b6100ce6104aa565b005b6100d86104be565b005b6100e26104d0565b6040516100ef9190610a67565b60405180910390f35b610112600480360381019061010d9190610888565b6104f9565b005b61011c61057d565b6101246105fb565b565b60008060149054906101000a900460ff16905090565b61014461057d565b61014c61065d565b60026001541415610192576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018990610b66565b60405180910390fd5b6002600181905550600073dac17f958d2ee523a2206206994597c13d831ec790506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff16633c78934d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561022257600080fd5b505afa158015610236573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025a919061093f565b905060008273ffffffffffffffffffffffffffffffffffffffff16635cbcf01d6040518163ffffffff1660e01b815260040160206040518083038186803b1580156102a457600080fd5b505afa1580156102b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102dc91906108b1565b90506002826102eb9190610bb2565b85101561032d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032490610b06565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff166303965994866040518263ffffffff1660e01b81526004016103669190610b86565b600060405180830381600087803b15801561038057600080fd5b505af1158015610394573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff16639da93f7b876040518263ffffffff1660e01b81526004016103d19190610a67565b600060405180830381600087803b1580156103eb57600080fd5b505af11580156103ff573d6000803e3d6000fd5b50505050600082111561049b578373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82846040518363ffffffff1660e01b8152600401610447929190610a82565b602060405180830381600087803b15801561046157600080fd5b505af1158015610475573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104999190610916565b505b50505050600180819055505050565b6104b261057d565b6104bc60006106a7565b565b6104c661057d565b6104ce61076b565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61050161057d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610571576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056890610ae6565b60405180910390fd5b61057a816106a7565b50565b6105856107ce565b73ffffffffffffffffffffffffffffffffffffffff166105a36104d0565b73ffffffffffffffffffffffffffffffffffffffff16146105f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f090610b46565b60405180910390fd5b565b6106036107d6565b60008060146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6106466107ce565b6040516106539190610a67565b60405180910390a1565b610665610126565b156106a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069c90610b26565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61077361065d565b6001600060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586107b76107ce565b6040516107c49190610a67565b60405180910390a1565b600033905090565b6107de610126565b61081d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081490610ac6565b60405180910390fd5b565b60008135905061082e81610d9f565b92915050565b60008151905061084381610d9f565b92915050565b60008151905061085881610db6565b92915050565b60008135905061086d81610dcd565b92915050565b60008151905061088281610dcd565b92915050565b60006020828403121561089a57600080fd5b60006108a88482850161081f565b91505092915050565b6000602082840312156108c357600080fd5b60006108d184828501610834565b91505092915050565b600080604083850312156108ed57600080fd5b60006108fb8582860161081f565b925050602061090c8582860161085e565b9150509250929050565b60006020828403121561092857600080fd5b600061093684828501610849565b91505092915050565b60006020828403121561095157600080fd5b600061095f84828501610873565b91505092915050565b61097181610c0c565b82525050565b61098081610c1e565b82525050565b6000610993601483610ba1565b915061099e82610c83565b602082019050919050565b60006109b6602683610ba1565b91506109c182610cac565b604082019050919050565b60006109d9601483610ba1565b91506109e482610cfb565b602082019050919050565b60006109fc601083610ba1565b9150610a0782610d24565b602082019050919050565b6000610a1f602083610ba1565b9150610a2a82610d4d565b602082019050919050565b6000610a42601f83610ba1565b9150610a4d82610d76565b602082019050919050565b610a6181610c4a565b82525050565b6000602082019050610a7c6000830184610968565b92915050565b6000604082019050610a976000830185610968565b610aa46020830184610a58565b9392505050565b6000602082019050610ac06000830184610977565b92915050565b60006020820190508181036000830152610adf81610986565b9050919050565b60006020820190508181036000830152610aff816109a9565b9050919050565b60006020820190508181036000830152610b1f816109cc565b9050919050565b60006020820190508181036000830152610b3f816109ef565b9050919050565b60006020820190508181036000830152610b5f81610a12565b9050919050565b60006020820190508181036000830152610b7f81610a35565b9050919050565b6000602082019050610b9b6000830184610a58565b92915050565b600082825260208201905092915050565b6000610bbd82610c4a565b9150610bc883610c4a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c0157610c00610c54565b5b828202905092915050565b6000610c1782610c2a565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f6465706f73697420697320746f6f20736d616c6c000000000000000000000000600082015250565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b610da881610c0c565b8114610db357600080fd5b50565b610dbf81610c1e565b8114610dca57600080fd5b50565b610dd681610c4a565b8114610de157600080fd5b5056fea26469706673582212207206547a29e835aa97c593dbe1b01e2ebad922af93c6ac4b2095aa267da7a75864736f6c63430008010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xF8 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x697716FB EQ PUSH2 0xAA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x114 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x94 PUSH2 0x126 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0xAAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x8DA JUMP JUMPDEST PUSH2 0x13C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCE PUSH2 0x4AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD8 PUSH2 0x4BE JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE2 PUSH2 0x4D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEF SWAP2 SWAP1 PUSH2 0xA67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x112 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x888 JUMP JUMPDEST PUSH2 0x4F9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11C PUSH2 0x57D JUMP JUMPDEST PUSH2 0x124 PUSH2 0x5FB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x57D JUMP JUMPDEST PUSH2 0x14C PUSH2 0x65D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x192 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x189 SWAP1 PUSH2 0xB66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xDAC17F958D2EE523A2206206994597C13D831EC7 SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3C78934D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x236 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x93F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5CBCF01D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x8B1 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP3 PUSH2 0x2EB SWAP2 SWAP1 PUSH2 0xBB2 JUMP JUMPDEST DUP6 LT ISZERO PUSH2 0x32D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x324 SWAP1 PUSH2 0xB06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3965994 DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x366 SWAP2 SWAP1 PUSH2 0xB86 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x394 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9DA93F7B DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0xA67 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 DUP3 GT ISZERO PUSH2 0x49B JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP3 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x447 SWAP3 SWAP2 SWAP1 PUSH2 0xA82 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x461 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x475 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x499 SWAP2 SWAP1 PUSH2 0x916 JUMP JUMPDEST POP JUMPDEST POP POP POP POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x4B2 PUSH2 0x57D JUMP JUMPDEST PUSH2 0x4BC PUSH1 0x0 PUSH2 0x6A7 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x4C6 PUSH2 0x57D JUMP JUMPDEST PUSH2 0x4CE PUSH2 0x76B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x501 PUSH2 0x57D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x571 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x568 SWAP1 PUSH2 0xAE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x57A DUP2 PUSH2 0x6A7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x585 PUSH2 0x7CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5A3 PUSH2 0x4D0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F0 SWAP1 PUSH2 0xB46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x603 PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x646 PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x653 SWAP2 SWAP1 PUSH2 0xA67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x665 PUSH2 0x126 JUMP JUMPDEST ISZERO PUSH2 0x6A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69C SWAP1 PUSH2 0xB26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x773 PUSH2 0x65D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x7B7 PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C4 SWAP2 SWAP1 PUSH2 0xA67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7DE PUSH2 0x126 JUMP JUMPDEST PUSH2 0x81D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x814 SWAP1 PUSH2 0xAC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x82E DUP2 PUSH2 0xD9F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x843 DUP2 PUSH2 0xD9F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x858 DUP2 PUSH2 0xDB6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x86D DUP2 PUSH2 0xDCD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x882 DUP2 PUSH2 0xDCD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x89A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8A8 DUP5 DUP3 DUP6 ADD PUSH2 0x81F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8D1 DUP5 DUP3 DUP6 ADD PUSH2 0x834 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8FB DUP6 DUP3 DUP7 ADD PUSH2 0x81F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x90C DUP6 DUP3 DUP7 ADD PUSH2 0x85E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x928 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x936 DUP5 DUP3 DUP6 ADD PUSH2 0x849 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x951 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x95F DUP5 DUP3 DUP6 ADD PUSH2 0x873 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x971 DUP2 PUSH2 0xC0C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x980 DUP2 PUSH2 0xC1E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x993 PUSH1 0x14 DUP4 PUSH2 0xBA1 JUMP JUMPDEST SWAP2 POP PUSH2 0x99E DUP3 PUSH2 0xC83 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B6 PUSH1 0x26 DUP4 PUSH2 0xBA1 JUMP JUMPDEST SWAP2 POP PUSH2 0x9C1 DUP3 PUSH2 0xCAC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D9 PUSH1 0x14 DUP4 PUSH2 0xBA1 JUMP JUMPDEST SWAP2 POP PUSH2 0x9E4 DUP3 PUSH2 0xCFB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9FC PUSH1 0x10 DUP4 PUSH2 0xBA1 JUMP JUMPDEST SWAP2 POP PUSH2 0xA07 DUP3 PUSH2 0xD24 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA1F PUSH1 0x20 DUP4 PUSH2 0xBA1 JUMP JUMPDEST SWAP2 POP PUSH2 0xA2A DUP3 PUSH2 0xD4D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA42 PUSH1 0x1F DUP4 PUSH2 0xBA1 JUMP JUMPDEST SWAP2 POP PUSH2 0xA4D DUP3 PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA61 DUP2 PUSH2 0xC4A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA7C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x968 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA97 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x968 JUMP JUMPDEST PUSH2 0xAA4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA58 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAC0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x977 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xADF DUP2 PUSH2 0x986 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAFF DUP2 PUSH2 0x9A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB1F DUP2 PUSH2 0x9CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB3F DUP2 PUSH2 0x9EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB5F DUP2 PUSH2 0xA12 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB7F DUP2 PUSH2 0xA35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB9B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA58 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBBD DUP3 PUSH2 0xC4A JUMP JUMPDEST SWAP2 POP PUSH2 0xBC8 DUP4 PUSH2 0xC4A JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xC01 JUMPI PUSH2 0xC00 PUSH2 0xC54 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC17 DUP3 PUSH2 0xC2A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6465706F73697420697320746F6F20736D616C6C000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xDA8 DUP2 PUSH2 0xC0C JUMP JUMPDEST DUP2 EQ PUSH2 0xDB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xDBF DUP2 PUSH2 0xC1E JUMP JUMPDEST DUP2 EQ PUSH2 0xDCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xDD6 DUP2 PUSH2 0xC4A JUMP JUMPDEST DUP2 EQ PUSH2 0xDE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0x6547A29E835AA97C593DBE1B01E2EBAD922AF SWAP4 0xC6 0xAC 0x4B KECCAK256 SWAP6 0xAA 0x26 PUSH30 0xA7A75864736F6C6343000801003300000000000000000000000000000000 ","sourceMap":"400:916:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;660:57;;;:::i;:::-;;1615:84:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;721:593:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1831:101:0;;;:::i;:::-;;603:53:5;;;:::i;:::-;;1201:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;660:57:5;1094:13:0;:11;:13::i;:::-;702:10:5::1;:8;:10::i;:::-;660:57::o:0;1615:84:1:-;1662:4;1685:7;;;;;;;;;;;1678:14;;1615:84;:::o;721:593:5:-;1094:13:0;:11;:13::i;:::-;1239:19:1::1;:17;:19::i;:::-;1744:1:2::2;2325:7;;:19;;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;842:11:5::3;871:42;842:73;;921:15;949:14;;;;;;;;;;;921:43;;971:23;997:5;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;971:48;;1025:20;1048:5;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1025:42;;1115:1;1097:15;:19;;;;:::i;:::-;1081:12;:35;;1073:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1150:5;:20;;;1171:12;1150:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;1190:5;:17;;;1208:9;1190:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;1247:1;1229:15;:19;1225:85;;;1259:4;:13;;;1273:12;1287:15;1259:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1225:85;2484:1:2;;;;1701::::2;2628:7:::0;:22:::2;;;;721:593:5::0;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;603:53:5:-;1094:13:0;:11;:13::i;:::-;643:8:5::1;:6;:8::i;:::-;603:53::o:0;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2081:198::-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:117:1:-;1486:16;:14;:16::i;:::-;2501:5:::1;2491:7:::0;::::1;:15;;;;;;;;;;;;;;;;;;2521:22;2530:12;:10;:12::i;:::-;2521:22;;;;;;:::i;:::-;;;;;;;;2433:117::o:0;1767:106::-;1837:8;:6;:8::i;:::-;1836:9;1828:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1767:106::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2433:187;;:::o;2186:115:1:-;1239:19;:17;:19::i;:::-;2255:4:::1;2245:7;;:14;;;;;;;;;;;;;;;;;;2274:20;2281:12;:10;:12::i;:::-;2274:20;;;;;;:::i;:::-;;;;;;;;2186:115::o:0;640:96:3:-;693:7;719:10;712:17;;640:96;:::o;1945:106:1:-;2011:8;:6;:8::i;:::-;2003:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;1945:106::o;7:139:7:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:143::-;;240:6;234:13;225:22;;256:33;283:5;256:33;:::i;:::-;215:80;;;;:::o;301:137::-;;386:6;380:13;371:22;;402:30;426:5;402:30;:::i;:::-;361:77;;;;:::o;444:139::-;;528:6;515:20;506:29;;544:33;571:5;544:33;:::i;:::-;496:87;;;;:::o;589:143::-;;677:6;671:13;662:22;;693:33;720:5;693:33;:::i;:::-;652:80;;;;:::o;738:262::-;;846:2;834:9;825:7;821:23;817:32;814:2;;;862:1;859;852:12;814:2;905:1;930:53;975:7;966:6;955:9;951:22;930:53;:::i;:::-;920:63;;876:117;804:196;;;;:::o;1006:284::-;;1125:2;1113:9;1104:7;1100:23;1096:32;1093:2;;;1141:1;1138;1131:12;1093:2;1184:1;1209:64;1265:7;1256:6;1245:9;1241:22;1209:64;:::i;:::-;1199:74;;1155:128;1083:207;;;;:::o;1296:407::-;;;1421:2;1409:9;1400:7;1396:23;1392:32;1389:2;;;1437:1;1434;1427:12;1389:2;1480:1;1505:53;1550:7;1541:6;1530:9;1526:22;1505:53;:::i;:::-;1495:63;;1451:117;1607:2;1633:53;1678:7;1669:6;1658:9;1654:22;1633:53;:::i;:::-;1623:63;;1578:118;1379:324;;;;;:::o;1709:278::-;;1825:2;1813:9;1804:7;1800:23;1796:32;1793:2;;;1841:1;1838;1831:12;1793:2;1884:1;1909:61;1962:7;1953:6;1942:9;1938:22;1909:61;:::i;:::-;1899:71;;1855:125;1783:204;;;;:::o;1993:284::-;;2112:2;2100:9;2091:7;2087:23;2083:32;2080:2;;;2128:1;2125;2118:12;2080:2;2171:1;2196:64;2252:7;2243:6;2232:9;2228:22;2196:64;:::i;:::-;2186:74;;2142:128;2070:207;;;;:::o;2283:118::-;2370:24;2388:5;2370:24;:::i;:::-;2365:3;2358:37;2348:53;;:::o;2407:109::-;2488:21;2503:5;2488:21;:::i;:::-;2483:3;2476:34;2466:50;;:::o;2522:366::-;;2685:67;2749:2;2744:3;2685:67;:::i;:::-;2678:74;;2761:93;2850:3;2761:93;:::i;:::-;2879:2;2874:3;2870:12;2863:19;;2668:220;;;:::o;2894:366::-;;3057:67;3121:2;3116:3;3057:67;:::i;:::-;3050:74;;3133:93;3222:3;3133:93;:::i;:::-;3251:2;3246:3;3242:12;3235:19;;3040:220;;;:::o;3266:366::-;;3429:67;3493:2;3488:3;3429:67;:::i;:::-;3422:74;;3505:93;3594:3;3505:93;:::i;:::-;3623:2;3618:3;3614:12;3607:19;;3412:220;;;:::o;3638:366::-;;3801:67;3865:2;3860:3;3801:67;:::i;:::-;3794:74;;3877:93;3966:3;3877:93;:::i;:::-;3995:2;3990:3;3986:12;3979:19;;3784:220;;;:::o;4010:366::-;;4173:67;4237:2;4232:3;4173:67;:::i;:::-;4166:74;;4249:93;4338:3;4249:93;:::i;:::-;4367:2;4362:3;4358:12;4351:19;;4156:220;;;:::o;4382:366::-;;4545:67;4609:2;4604:3;4545:67;:::i;:::-;4538:74;;4621:93;4710:3;4621:93;:::i;:::-;4739:2;4734:3;4730:12;4723:19;;4528:220;;;:::o;4754:118::-;4841:24;4859:5;4841:24;:::i;:::-;4836:3;4829:37;4819:53;;:::o;4878:222::-;;5009:2;4998:9;4994:18;4986:26;;5022:71;5090:1;5079:9;5075:17;5066:6;5022:71;:::i;:::-;4976:124;;;;:::o;5106:332::-;;5265:2;5254:9;5250:18;5242:26;;5278:71;5346:1;5335:9;5331:17;5322:6;5278:71;:::i;:::-;5359:72;5427:2;5416:9;5412:18;5403:6;5359:72;:::i;:::-;5232:206;;;;;:::o;5444:210::-;;5569:2;5558:9;5554:18;5546:26;;5582:65;5644:1;5633:9;5629:17;5620:6;5582:65;:::i;:::-;5536:118;;;;:::o;5660:419::-;;5864:2;5853:9;5849:18;5841:26;;5913:9;5907:4;5903:20;5899:1;5888:9;5884:17;5877:47;5941:131;6067:4;5941:131;:::i;:::-;5933:139;;5831:248;;;:::o;6085:419::-;;6289:2;6278:9;6274:18;6266:26;;6338:9;6332:4;6328:20;6324:1;6313:9;6309:17;6302:47;6366:131;6492:4;6366:131;:::i;:::-;6358:139;;6256:248;;;:::o;6510:419::-;;6714:2;6703:9;6699:18;6691:26;;6763:9;6757:4;6753:20;6749:1;6738:9;6734:17;6727:47;6791:131;6917:4;6791:131;:::i;:::-;6783:139;;6681:248;;;:::o;6935:419::-;;7139:2;7128:9;7124:18;7116:26;;7188:9;7182:4;7178:20;7174:1;7163:9;7159:17;7152:47;7216:131;7342:4;7216:131;:::i;:::-;7208:139;;7106:248;;;:::o;7360:419::-;;7564:2;7553:9;7549:18;7541:26;;7613:9;7607:4;7603:20;7599:1;7588:9;7584:17;7577:47;7641:131;7767:4;7641:131;:::i;:::-;7633:139;;7531:248;;;:::o;7785:419::-;;7989:2;7978:9;7974:18;7966:26;;8038:9;8032:4;8028:20;8024:1;8013:9;8009:17;8002:47;8066:131;8192:4;8066:131;:::i;:::-;8058:139;;7956:248;;;:::o;8210:222::-;;8341:2;8330:9;8326:18;8318:26;;8354:71;8422:1;8411:9;8407:17;8398:6;8354:71;:::i;:::-;8308:124;;;;:::o;8438:169::-;;8556:6;8551:3;8544:19;8596:4;8591:3;8587:14;8572:29;;8534:73;;;;:::o;8613:348::-;;8676:20;8694:1;8676:20;:::i;:::-;8671:25;;8710:20;8728:1;8710:20;:::i;:::-;8705:25;;8898:1;8830:66;8826:74;8823:1;8820:81;8815:1;8808:9;8801:17;8797:105;8794:2;;;8905:18;;:::i;:::-;8794:2;8953:1;8950;8946:9;8935:20;;8661:300;;;;:::o;8967:96::-;;9033:24;9051:5;9033:24;:::i;:::-;9022:35;;9012:51;;;:::o;9069:90::-;;9146:5;9139:13;9132:21;9121:32;;9111:48;;;:::o;9165:126::-;;9242:42;9235:5;9231:54;9220:65;;9210:81;;;:::o;9297:77::-;;9363:5;9352:16;;9342:32;;;:::o;9380:180::-;9428:77;9425:1;9418:88;9525:4;9522:1;9515:15;9549:4;9546:1;9539:15;9566:170;9706:22;9702:1;9694:6;9690:14;9683:46;9672:64;:::o;9742:225::-;9882:34;9878:1;9870:6;9866:14;9859:58;9951:8;9946:2;9938:6;9934:15;9927:33;9848:119;:::o;9973:170::-;10113:22;10109:1;10101:6;10097:14;10090:46;10079:64;:::o;10149:166::-;10289:18;10285:1;10277:6;10273:14;10266:42;10255:60;:::o;10321:182::-;10461:34;10457:1;10449:6;10445:14;10438:58;10427:76;:::o;10509:181::-;10649:33;10645:1;10637:6;10633:14;10626:57;10615:75;:::o;10696:122::-;10769:24;10787:5;10769:24;:::i;:::-;10762:5;10759:35;10749:2;;10808:1;10805;10798:12;10749:2;10739:79;:::o;10824:116::-;10894:21;10909:5;10894:21;:::i;:::-;10887:5;10884:32;10874:2;;10930:1;10927;10920:12;10874:2;10864:76;:::o;10946:122::-;11019:24;11037:5;11019:24;:::i;:::-;11012:5;11009:35;10999:2;;11058:1;11055;11048:12;10999:2;10989:79;:::o"},"methodIdentifiers":{"owner()":"8da5cb5b","pause()":"8456cb59","paused()":"5c975abb","recordLastFool(address,uint256)":"697716fb","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","unpause()":"3f4ba83a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_eternalStorage\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lastFool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_lastDeposit\",\"type\":\"uint256\"}],\"name\":\"recordLastFool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FoolLogic.sol\":\"FoolLogic\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts4.7.3/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts4.7.3/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts4.7.3/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts4.7.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts4.7.3/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/FoolLogic.sol\":{\"keccak256\":\"0x0d30b7e0d83b9225f1e3860453ecd91834f191351d3c15b3f837ff58bdd85813\",\"urls\":[\"bzz-raw://947b03f2c360e4120dbc7d25ccd5db68a8830f7bc2ead3dcf1f286747c7297b1\",\"dweb:/ipfs/QmP3rP5RNucQGTrEwJFVfbFB8sqGJKG2AWhnMmgkwn2bEk\"]},\"contracts/FoolVault.sol\":{\"keccak256\":\"0xf34de1d3263984b7372e204833b551bf8287f4314ee53cb055c4b6658dc15870\",\"urls\":[\"bzz-raw://f4a20ea0fd781dbf19c56af93d9755c3377cf103dadfd1d4ad5823d96b3b37b9\",\"dweb:/ipfs/Qmcj3BbbCEJ1gFk7PArEyRZ4PMZst5SvvNLt5hRPAW6Xdb\"]}},\"version\":1}"},"IERC20":{"abi":[{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"transfer(address,uint256)":"a9059cbb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FoolLogic.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts4.7.3/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts4.7.3/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts4.7.3/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts4.7.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts4.7.3/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/FoolLogic.sol\":{\"keccak256\":\"0x0d30b7e0d83b9225f1e3860453ecd91834f191351d3c15b3f837ff58bdd85813\",\"urls\":[\"bzz-raw://947b03f2c360e4120dbc7d25ccd5db68a8830f7bc2ead3dcf1f286747c7297b1\",\"dweb:/ipfs/QmP3rP5RNucQGTrEwJFVfbFB8sqGJKG2AWhnMmgkwn2bEk\"]},\"contracts/FoolVault.sol\":{\"keccak256\":\"0xf34de1d3263984b7372e204833b551bf8287f4314ee53cb055c4b6658dc15870\",\"urls\":[\"bzz-raw://f4a20ea0fd781dbf19c56af93d9755c3377cf103dadfd1d4ad5823d96b3b37b9\",\"dweb:/ipfs/Qmcj3BbbCEJ1gFk7PArEyRZ4PMZst5SvvNLt5hRPAW6Xdb\"]}},\"version\":1}"}},"contracts/FoolVault.sol":{"FoolVault":{"abi":[{"inputs":[],"name":"getLastDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLastFool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"setLastDeposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_value","type":"address"}],"name":"setLastFool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newVersion","type":"address"}],"name":"upgradeVersion","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561005057600080fd5b5061042e806100606000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063039659941461005c5780633c78934d146100785780635cbcf01d146100965780639da93f7b146100b4578063d28eb963146100d0575b600080fd5b61007660048036038101906100719190610311565b6100ec565b005b610080610150565b60405161008d9190610373565b60405180910390f35b61009e61015a565b6040516100ab9190610358565b60405180910390f35b6100ce60048036038101906100c991906102e8565b610184565b005b6100ea60048036038101906100e591906102e8565b610222565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461014657600080fd5b8060038190555050565b6000600354905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101de57600080fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461027a57600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000813590506102cd816103ca565b92915050565b6000813590506102e2816103e1565b92915050565b6000602082840312156102fa57600080fd5b6000610308848285016102be565b91505092915050565b60006020828403121561032357600080fd5b6000610331848285016102d3565b91505092915050565b6103438161038e565b82525050565b610352816103c0565b82525050565b600060208201905061036d600083018461033a565b92915050565b60006020820190506103886000830184610349565b92915050565b6000610399826103a0565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6103d38161038e565b81146103de57600080fd5b50565b6103ea816103c0565b81146103f557600080fd5b5056fea2646970667358221220182149a65eedabce22d1c80e01ddcd5a98cfb79ef40e74765b7109eb3c0e401d64736f6c63430008010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42E DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3965994 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x3C78934D EQ PUSH2 0x78 JUMPI DUP1 PUSH4 0x5CBCF01D EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x9DA93F7B EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0xD28EB963 EQ PUSH2 0xD0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x311 JUMP JUMPDEST PUSH2 0xEC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x80 PUSH2 0x150 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8D SWAP2 SWAP1 PUSH2 0x373 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9E PUSH2 0x15A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAB SWAP2 SWAP1 PUSH2 0x358 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0x2E8 JUMP JUMPDEST PUSH2 0x184 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0x2E8 JUMP JUMPDEST PUSH2 0x222 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2CD DUP2 PUSH2 0x3CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2E2 DUP2 PUSH2 0x3E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x308 DUP5 DUP3 DUP6 ADD PUSH2 0x2BE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x331 DUP5 DUP3 DUP6 ADD PUSH2 0x2D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x343 DUP2 PUSH2 0x38E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x352 DUP2 PUSH2 0x3C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x36D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x33A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x388 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x349 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x399 DUP3 PUSH2 0x3A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D3 DUP2 PUSH2 0x38E JUMP JUMPDEST DUP2 EQ PUSH2 0x3DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3EA DUP2 PUSH2 0x3C0 JUMP JUMPDEST DUP2 EQ PUSH2 0x3F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR 0x21 0x49 0xA6 0x5E 0xED 0xAB 0xCE 0x22 0xD1 0xC8 0xE ADD 0xDD 0xCD GAS SWAP9 0xCF 0xB7 SWAP15 DELEGATECALL 0xE PUSH21 0x765B7109EB3C0E401D64736F6C6343000801003300 ","sourceMap":"25:766:6:-:0;;;65:10;49:26;;;;;;;;;;;;;;;;;;;;25:766;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2107:7","statements":[{"body":{"nodeType":"YulBlock","src":"59:87:7","statements":[{"nodeType":"YulAssignment","src":"69:29:7","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"91:6:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"78:12:7"},"nodeType":"YulFunctionCall","src":"78:20:7"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"69:5:7"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"134:5:7"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"107:26:7"},"nodeType":"YulFunctionCall","src":"107:33:7"},"nodeType":"YulExpressionStatement","src":"107:33:7"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37:6:7","type":""},{"name":"end","nodeType":"YulTypedName","src":"45:3:7","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:7","type":""}],"src":"7:139:7"},{"body":{"nodeType":"YulBlock","src":"204:87:7","statements":[{"nodeType":"YulAssignment","src":"214:29:7","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"236:6:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"223:12:7"},"nodeType":"YulFunctionCall","src":"223:20:7"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"214:5:7"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"279:5:7"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"252:26:7"},"nodeType":"YulFunctionCall","src":"252:33:7"},"nodeType":"YulExpressionStatement","src":"252:33:7"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"182:6:7","type":""},{"name":"end","nodeType":"YulTypedName","src":"190:3:7","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"198:5:7","type":""}],"src":"152:139:7"},{"body":{"nodeType":"YulBlock","src":"363:196:7","statements":[{"body":{"nodeType":"YulBlock","src":"409:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"418:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"421:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"411:6:7"},"nodeType":"YulFunctionCall","src":"411:12:7"},"nodeType":"YulExpressionStatement","src":"411:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"384:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"393:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"380:3:7"},"nodeType":"YulFunctionCall","src":"380:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"405:2:7","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"376:3:7"},"nodeType":"YulFunctionCall","src":"376:32:7"},"nodeType":"YulIf","src":"373:2:7"},{"nodeType":"YulBlock","src":"435:117:7","statements":[{"nodeType":"YulVariableDeclaration","src":"450:15:7","value":{"kind":"number","nodeType":"YulLiteral","src":"464:1:7","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"454:6:7","type":""}]},{"nodeType":"YulAssignment","src":"479:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"514:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"525:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"510:3:7"},"nodeType":"YulFunctionCall","src":"510:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"534:7:7"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"489:20:7"},"nodeType":"YulFunctionCall","src":"489:53:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"479:6:7"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"333:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"344:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"356:6:7","type":""}],"src":"297:262:7"},{"body":{"nodeType":"YulBlock","src":"631:196:7","statements":[{"body":{"nodeType":"YulBlock","src":"677:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"686:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"689:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"679:6:7"},"nodeType":"YulFunctionCall","src":"679:12:7"},"nodeType":"YulExpressionStatement","src":"679:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"652:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"661:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"648:3:7"},"nodeType":"YulFunctionCall","src":"648:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"673:2:7","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"644:3:7"},"nodeType":"YulFunctionCall","src":"644:32:7"},"nodeType":"YulIf","src":"641:2:7"},{"nodeType":"YulBlock","src":"703:117:7","statements":[{"nodeType":"YulVariableDeclaration","src":"718:15:7","value":{"kind":"number","nodeType":"YulLiteral","src":"732:1:7","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"722:6:7","type":""}]},{"nodeType":"YulAssignment","src":"747:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"782:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"793:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"778:3:7"},"nodeType":"YulFunctionCall","src":"778:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"802:7:7"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"757:20:7"},"nodeType":"YulFunctionCall","src":"757:53:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"747:6:7"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"601:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"612:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"624:6:7","type":""}],"src":"565:262:7"},{"body":{"nodeType":"YulBlock","src":"898:53:7","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"915:3:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"938:5:7"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"920:17:7"},"nodeType":"YulFunctionCall","src":"920:24:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"908:6:7"},"nodeType":"YulFunctionCall","src":"908:37:7"},"nodeType":"YulExpressionStatement","src":"908:37:7"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"886:5:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"893:3:7","type":""}],"src":"833:118:7"},{"body":{"nodeType":"YulBlock","src":"1022:53:7","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1039:3:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1062:5:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1044:17:7"},"nodeType":"YulFunctionCall","src":"1044:24:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1032:6:7"},"nodeType":"YulFunctionCall","src":"1032:37:7"},"nodeType":"YulExpressionStatement","src":"1032:37:7"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1010:5:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1017:3:7","type":""}],"src":"957:118:7"},{"body":{"nodeType":"YulBlock","src":"1179:124:7","statements":[{"nodeType":"YulAssignment","src":"1189:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1201:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"1212:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1197:3:7"},"nodeType":"YulFunctionCall","src":"1197:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1189:4:7"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1269:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1282:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"1293:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1278:3:7"},"nodeType":"YulFunctionCall","src":"1278:17:7"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"1225:43:7"},"nodeType":"YulFunctionCall","src":"1225:71:7"},"nodeType":"YulExpressionStatement","src":"1225:71:7"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1151:9:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1163:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1174:4:7","type":""}],"src":"1081:222:7"},{"body":{"nodeType":"YulBlock","src":"1407:124:7","statements":[{"nodeType":"YulAssignment","src":"1417:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1429:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"1440:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1425:3:7"},"nodeType":"YulFunctionCall","src":"1425:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1417:4:7"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1497:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1510:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"1521:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1506:3:7"},"nodeType":"YulFunctionCall","src":"1506:17:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1453:43:7"},"nodeType":"YulFunctionCall","src":"1453:71:7"},"nodeType":"YulExpressionStatement","src":"1453:71:7"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1379:9:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1391:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1402:4:7","type":""}],"src":"1309:222:7"},{"body":{"nodeType":"YulBlock","src":"1582:51:7","statements":[{"nodeType":"YulAssignment","src":"1592:35:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1621:5:7"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1603:17:7"},"nodeType":"YulFunctionCall","src":"1603:24:7"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1592:7:7"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1564:5:7","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1574:7:7","type":""}],"src":"1537:96:7"},{"body":{"nodeType":"YulBlock","src":"1684:81:7","statements":[{"nodeType":"YulAssignment","src":"1694:65:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1709:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"1716:42:7","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1705:3:7"},"nodeType":"YulFunctionCall","src":"1705:54:7"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1694:7:7"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1666:5:7","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1676:7:7","type":""}],"src":"1639:126:7"},{"body":{"nodeType":"YulBlock","src":"1816:32:7","statements":[{"nodeType":"YulAssignment","src":"1826:16:7","value":{"name":"value","nodeType":"YulIdentifier","src":"1837:5:7"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1826:7:7"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1798:5:7","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1808:7:7","type":""}],"src":"1771:77:7"},{"body":{"nodeType":"YulBlock","src":"1897:79:7","statements":[{"body":{"nodeType":"YulBlock","src":"1954:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1963:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1966:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1956:6:7"},"nodeType":"YulFunctionCall","src":"1956:12:7"},"nodeType":"YulExpressionStatement","src":"1956:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1920:5:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1945:5:7"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1927:17:7"},"nodeType":"YulFunctionCall","src":"1927:24:7"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1917:2:7"},"nodeType":"YulFunctionCall","src":"1917:35:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1910:6:7"},"nodeType":"YulFunctionCall","src":"1910:43:7"},"nodeType":"YulIf","src":"1907:2:7"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1890:5:7","type":""}],"src":"1854:122:7"},{"body":{"nodeType":"YulBlock","src":"2025:79:7","statements":[{"body":{"nodeType":"YulBlock","src":"2082:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2091:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2094:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2084:6:7"},"nodeType":"YulFunctionCall","src":"2084:12:7"},"nodeType":"YulExpressionStatement","src":"2084:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2048:5:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2073:5:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2055:17:7"},"nodeType":"YulFunctionCall","src":"2055:24:7"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2045:2:7"},"nodeType":"YulFunctionCall","src":"2045:35:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2038:6:7"},"nodeType":"YulFunctionCall","src":"2038:43:7"},"nodeType":"YulIf","src":"2035:2:7"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2018:5:7","type":""}],"src":"1982:122:7"}]},"contents":"{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":7,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100575760003560e01c8063039659941461005c5780633c78934d146100785780635cbcf01d146100965780639da93f7b146100b4578063d28eb963146100d0575b600080fd5b61007660048036038101906100719190610311565b6100ec565b005b610080610150565b60405161008d9190610373565b60405180910390f35b61009e61015a565b6040516100ab9190610358565b60405180910390f35b6100ce60048036038101906100c991906102e8565b610184565b005b6100ea60048036038101906100e591906102e8565b610222565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461014657600080fd5b8060038190555050565b6000600354905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101de57600080fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461027a57600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000813590506102cd816103ca565b92915050565b6000813590506102e2816103e1565b92915050565b6000602082840312156102fa57600080fd5b6000610308848285016102be565b91505092915050565b60006020828403121561032357600080fd5b6000610331848285016102d3565b91505092915050565b6103438161038e565b82525050565b610352816103c0565b82525050565b600060208201905061036d600083018461033a565b92915050565b60006020820190506103886000830184610349565b92915050565b6000610399826103a0565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6103d38161038e565b81146103de57600080fd5b50565b6103ea816103c0565b81146103f557600080fd5b5056fea2646970667358221220182149a65eedabce22d1c80e01ddcd5a98cfb79ef40e74765b7109eb3c0e401d64736f6c63430008010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3965994 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x3C78934D EQ PUSH2 0x78 JUMPI DUP1 PUSH4 0x5CBCF01D EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x9DA93F7B EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0xD28EB963 EQ PUSH2 0xD0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x311 JUMP JUMPDEST PUSH2 0xEC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x80 PUSH2 0x150 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8D SWAP2 SWAP1 PUSH2 0x373 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9E PUSH2 0x15A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAB SWAP2 SWAP1 PUSH2 0x358 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0x2E8 JUMP JUMPDEST PUSH2 0x184 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0x2E8 JUMP JUMPDEST PUSH2 0x222 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2CD DUP2 PUSH2 0x3CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2E2 DUP2 PUSH2 0x3E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x308 DUP5 DUP3 DUP6 ADD PUSH2 0x2BE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x331 DUP5 DUP3 DUP6 ADD PUSH2 0x2D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x343 DUP2 PUSH2 0x38E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x352 DUP2 PUSH2 0x3C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x36D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x33A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x388 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x349 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x399 DUP3 PUSH2 0x3A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D3 DUP2 PUSH2 0x38E JUMP JUMPDEST DUP2 EQ PUSH2 0x3DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3EA DUP2 PUSH2 0x3C0 JUMP JUMPDEST DUP2 EQ PUSH2 0x3F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR 0x21 0x49 0xA6 0x5E 0xED 0xAB 0xCE 0x22 0xD1 0xC8 0xE ADD 0xDD 0xCD GAS SWAP9 0xCF 0xB7 SWAP15 DELEGATECALL 0xE PUSH21 0x765B7109EB3C0E401D64736F6C6343000801003300 ","sourceMap":"25:766:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;595:98;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;391:86;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;481:80;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;697:92;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;235:124;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;595:98;205:13;;;;;;;;;;;191:27;;:10;:27;;;183:36;;;;;;682:6:::1;668:11;:20;;;;595:98:::0;:::o;391:86::-;439:7;461:11;;454:18;;391:86;:::o;481:80::-;526:7;548:8;;;;;;;;;;;541:15;;481:80;:::o;697:92::-;205:13;;;;;;;;;;;191:27;;:10;:27;;;183:36;;;;;;778:6:::1;767:8;;:17;;;;;;;;;;;;;;;;;;697:92:::0;:::o;235:124::-;315:5;;;;;;;;;;301:19;;:10;:19;;;293:28;;;;;;343:11;327:13;;:27;;;;;;;;;;;;;;;;;;235:124;:::o;7:139:7:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:262::-;;405:2;393:9;384:7;380:23;376:32;373:2;;;421:1;418;411:12;373:2;464:1;489:53;534:7;525:6;514:9;510:22;489:53;:::i;:::-;479:63;;435:117;363:196;;;;:::o;565:262::-;;673:2;661:9;652:7;648:23;644:32;641:2;;;689:1;686;679:12;641:2;732:1;757:53;802:7;793:6;782:9;778:22;757:53;:::i;:::-;747:63;;703:117;631:196;;;;:::o;833:118::-;920:24;938:5;920:24;:::i;:::-;915:3;908:37;898:53;;:::o;957:118::-;1044:24;1062:5;1044:24;:::i;:::-;1039:3;1032:37;1022:53;;:::o;1081:222::-;;1212:2;1201:9;1197:18;1189:26;;1225:71;1293:1;1282:9;1278:17;1269:6;1225:71;:::i;:::-;1179:124;;;;:::o;1309:222::-;;1440:2;1429:9;1425:18;1417:26;;1453:71;1521:1;1510:9;1506:17;1497:6;1453:71;:::i;:::-;1407:124;;;;:::o;1537:96::-;;1603:24;1621:5;1603:24;:::i;:::-;1592:35;;1582:51;;;:::o;1639:126::-;;1716:42;1709:5;1705:54;1694:65;;1684:81;;;:::o;1771:77::-;;1837:5;1826:16;;1816:32;;;:::o;1854:122::-;1927:24;1945:5;1927:24;:::i;:::-;1920:5;1917:35;1907:2;;1966:1;1963;1956:12;1907:2;1897:79;:::o;1982:122::-;2055:24;2073:5;2055:24;:::i;:::-;2048:5;2045:35;2035:2;;2094:1;2091;2084:12;2035:2;2025:79;:::o"},"methodIdentifiers":{"getLastDeposit()":"3c78934d","getLastFool()":"5cbcf01d","setLastDeposit(uint256)":"03965994","setLastFool(address)":"9da93f7b","upgradeVersion(address)":"d28eb963"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getLastDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastFool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setLastDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_value\",\"type\":\"address\"}],\"name\":\"setLastFool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newVersion\",\"type\":\"address\"}],\"name\":\"upgradeVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FoolVault.sol\":\"FoolVault\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FoolVault.sol\":{\"keccak256\":\"0xf34de1d3263984b7372e204833b551bf8287f4314ee53cb055c4b6658dc15870\",\"urls\":[\"bzz-raw://f4a20ea0fd781dbf19c56af93d9755c3377cf103dadfd1d4ad5823d96b3b37b9\",\"dweb:/ipfs/Qmcj3BbbCEJ1gFk7PArEyRZ4PMZst5SvvNLt5hRPAW6Xdb\"]}},\"version\":1}"}}}}}